# Add date formatting options.
directive @dateformat(formatString: String, locale: String, fromNow: Boolean, difference: String) on FIELD_DEFINITION

# Link to node by foreign-key relation.
directive @link(by: String! = "id", from: String, on: String) on FIELD_DEFINITION

# Link to File node by relative path.
directive @fileByRelativePath(from: String) on FIELD_DEFINITION

# Proxy resolver from another field.
directive @proxy(from: String!, fromNode: Boolean! = false) on FIELD_DEFINITION

# Infer field types from field values.
directive @infer on OBJECT

# Do not infer field types from field values.
directive @dontInfer on OBJECT

# Define the mime-types handled by this type.
directive @mimeTypes(
  # The mime-types handled by this type.
  types: [String!]! = []
) on OBJECT

# Define parent-child relations between types. This is used to add `child*` and `children*` convenience fields like `childImageSharp`.
directive @childOf(
  # A list of mime-types this type is a child of. Usually these are the mime-types handled by a transformer plugin.
  mimeTypes: [String!]! = []

  # A list of types this type is a child of. Usually these are the types handled by a transformer plugin.
  types: [String!]! = []
) on OBJECT

# DEPRECATED: Use interface inheritance instead, i.e. "interface Foo implements Node".
#
# Adds root query fields for an interface. All implementing types must also implement the Node interface.
directive @nodeInterface on INTERFACE

type File implements Node {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  accessTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  changeTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  mtime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  ctime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  blksize: Int
  blocks: Int

  # Copy file to static directory and return public url to it
  publicURL: String

  # Returns all children nodes filtered by type ImageSharp
  childrenImageSharp: [ImageSharp]

  # Returns the first child node of type ImageSharp or null if there are no children of given type on this node
  childImageSharp: ImageSharp

  # Returns all children nodes filtered by type IoEventsYaml
  childrenIoEventsYaml: [IoEventsYaml]

  # Returns the first child node of type IoEventsYaml or null if there are no children of given type on this node
  childIoEventsYaml: IoEventsYaml

  # Returns all children nodes filtered by type LocationsYaml
  childrenLocationsYaml: [LocationsYaml]

  # Returns the first child node of type LocationsYaml or null if there are no children of given type on this node
  childLocationsYaml: LocationsYaml

  # Returns all children nodes filtered by type FaqYaml
  childrenFaqYaml: [FaqYaml]

  # Returns the first child node of type FaqYaml or null if there are no children of given type on this node
  childFaqYaml: FaqYaml

  # Returns all children nodes filtered by type DataYaml
  childrenDataYaml: [DataYaml]

  # Returns the first child node of type DataYaml or null if there are no children of given type on this node
  childDataYaml: DataYaml

  # Returns all children nodes filtered by type AuthorsYaml
  childrenAuthorsYaml: [AuthorsYaml]

  # Returns the first child node of type AuthorsYaml or null if there are no children of given type on this node
  childAuthorsYaml: AuthorsYaml

  # Returns all children nodes filtered by type AdminYaml
  childrenAdminYaml: [AdminYaml]

  # Returns the first child node of type AdminYaml or null if there are no children of given type on this node
  childAdminYaml: AdminYaml
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

# Node Interface
interface Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type Internal {
  content: String
  contentDigest: String!
  description: String
  fieldOwners: [String]
  ignoreType: Boolean
  mediaType: String
  owner: String!
  type: String!
}

# A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
scalar Date

type Directory implements Node {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  accessTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  changeTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  mtime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  ctime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type Site implements Node {
  buildTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  siteMetadata: SiteSiteMetadata
  port: Int
  host: String
  pathPrefix: String
  polyfill: Boolean
  jsxRuntime: String
  trailingSlash: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type SiteSiteMetadata {
  title: String
  description: String
  siteUrl: String
  rssMetadata: SiteSiteMetadataRssMetadata
}

type SiteSiteMetadataRssMetadata {
  site_url: String
  feed_url: String
  title: String
  description: String
  image_url: String
  copyright: String
}

type SiteFunction implements Node {
  functionRoute: String!
  pluginName: String!
  originalAbsoluteFilePath: String!
  originalRelativeFilePath: String!
  relativeCompiledFilePath: String!
  absoluteCompiledFilePath: String!
  matchPath: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type SitePage implements Node {
  path: String!
  component: String!
  internalComponentName: String!
  componentChunkName: String!
  matchPath: String
  pageContext: JSON
  pluginCreator: SitePlugin
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

# The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type SitePlugin implements Node {
  resolve: String
  name: String
  version: String
  nodeAPIs: [String]
  browserAPIs: [String]
  ssrAPIs: [String]
  pluginFilepath: String
  pluginOptions: JSON
  packageJson: JSON
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type SiteBuildMetadata implements Node {
  buildTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type MarkdownHeading {
  id: String
  value: String
  depth: Int
}

enum MarkdownHeadingLevels {
  h1
  h2
  h3
  h4
  h5
  h6
}

enum MarkdownExcerptFormats {
  PLAIN
  HTML
  MARKDOWN
}

type MarkdownWordCount {
  paragraphs: Int
  sentences: Int
  words: Int
}

type MarkdownRemark implements Node {
  id: ID!
  html: String
  htmlAst: JSON
  excerpt(pruneLength: Int = 140, truncate: Boolean = false, format: MarkdownExcerptFormats = PLAIN): String
  excerptAst(pruneLength: Int = 140, truncate: Boolean = false): JSON
  headings(depth: MarkdownHeadingLevels): [MarkdownHeading]
  timeToRead: Int
  tableOfContents(absolute: Boolean = false, pathToSlugField: String = "", maxDepth: Int, heading: String): String
  wordCount: MarkdownWordCount
  parent: Node
  children: [Node!]!
  internal: Internal!
}

enum ImageFormat {
  NO_CHANGE
  AUTO
  JPG
  PNG
  WEBP
  AVIF
}

enum ImageFit {
  COVER
  CONTAIN
  FILL
  INSIDE
  OUTSIDE
}

enum ImageLayout {
  FIXED
  FULL_WIDTH
  CONSTRAINED
}

enum ImageCropFocus {
  CENTER
  NORTH
  NORTHEAST
  EAST
  SOUTHEAST
  SOUTH
  SOUTHWEST
  WEST
  NORTHWEST
  ENTROPY
  ATTENTION
}

input DuotoneGradient {
  highlight: String!
  shadow: String!
  opacity: Int
}

enum PotraceTurnPolicy {
  TURNPOLICY_BLACK
  TURNPOLICY_WHITE
  TURNPOLICY_LEFT
  TURNPOLICY_RIGHT
  TURNPOLICY_MINORITY
  TURNPOLICY_MAJORITY
}

input Potrace {
  turnPolicy: PotraceTurnPolicy
  turdSize: Float
  alphaMax: Float
  optCurve: Boolean
  optTolerance: Float
  threshold: Int
  blackOnWhite: Boolean
  color: String
  background: String
}

type ImageSharp implements Node {
  fixed(width: Int, height: Int, base64Width: Int, jpegProgressive: Boolean = true, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, traceSVG: Potrace, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, toFormat: ImageFormat = AUTO, toFormatBase64: ImageFormat = AUTO, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int = 0, trim: Float = 0): ImageSharpFixed
  fluid(
    maxWidth: Int
    maxHeight: Int
    base64Width: Int
    grayscale: Boolean = false
    jpegProgressive: Boolean = true
    pngCompressionSpeed: Int = 4
    duotone: DuotoneGradient
    traceSVG: Potrace
    quality: Int
    jpegQuality: Int
    pngQuality: Int
    webpQuality: Int
    toFormat: ImageFormat = AUTO
    toFormatBase64: ImageFormat = AUTO
    cropFocus: ImageCropFocus = ATTENTION
    fit: ImageFit = COVER
    background: String = "rgba(0,0,0,1)"
    rotate: Int = 0
    trim: Float = 0
    sizes: String = ""

    # A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]
    srcSetBreakpoints: [Int] = []
  ): ImageSharpFluid
  gatsbyImageData(
    # The layout for the image.
    # FIXED: A static image sized, that does not resize according to the screen width
    # FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
    # CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
    layout: ImageLayout = CONSTRAINED

    # The display width of the generated image for layout = FIXED, and the maximum display width of the largest image for layout = CONSTRAINED.
    # Ignored if layout = FLUID.
    width: Int

    # The display height of the generated image for layout = FIXED, and the maximum display height of the largest image for layout = CONSTRAINED.
    # The image will be cropped if the aspect ratio does not match the source image. If omitted, it is calculated from the supplied width,
    # matching the aspect ratio of the source image.
    height: Int

    # If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
    # If neither width or height is provided, height will be set based on the intrinsic width of the source image.
    aspectRatio: Float

    # Format of generated placeholder image, displayed while the main image loads.
    # BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
    # DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
    # TRACED_SVG: a low-resolution traced SVG of the image.
    # NONE: no placeholder. Set "background" to use a fixed background color.
    placeholder: ImagePlaceholder

    # Options for the low-resolution placeholder image. Set placeholder to "BLURRED" to use this
    blurredOptions: BlurredOptions

    # Options for traced placeholder SVGs. You also should set placeholder to "TRACED_SVG".
    tracedSVGOptions: Potrace

    # The image formats to generate. Valid values are "AUTO" (meaning the same format as the source image), "JPG", "PNG", "WEBP" and "AVIF".
    # The default value is [AUTO, WEBP], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
    # not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
    # both PNG and JPG is not supported and will be ignored.
    formats: [ImageFormat]

    # A list of image pixel densities to generate. It will never generate images larger than the source, and will always include a 1x image.
    # Default is [ 1, 2 ] for FIXED images, meaning 1x and 2x and [0.25, 0.5, 1, 2] for CONSTRAINED. In this case, an image with a constrained layout
    # and width = 400 would generate images at 100, 200, 400 and 800px wide. Ignored for FULL_WIDTH images, which use breakpoints instead
    outputPixelDensities: [Float]

    # Specifies the image widths to generate. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
    # based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
    # It will never generate any images larger than the source.
    breakpoints: [Int]

    # The "sizes" property, passed to the img tag. This describes the display size of the image.
    # This does not affect the generated images, but is used by the browser to decide which images to download.
    # You should usually leave this blank, and a suitable value will be calculated. The exception is if a FULL_WIDTH image
    # does not actually span the full width of the screen, in which case you should pass the correct size here.
    sizes: String

    # The default quality. This is overridden by any format-specific options
    quality: Int

    # Options to pass to sharp when generating JPG images.
    jpgOptions: JPGOptions

    # Options to pass to sharp when generating PNG images.
    pngOptions: PNGOptions

    # Options to pass to sharp when generating WebP images.
    webpOptions: WebPOptions

    # Options to pass to sharp when generating AVIF images.
    avifOptions: AVIFOptions

    # Options to pass to sharp to control cropping and other image manipulations.
    transformOptions: TransformOptions

    # Background color applied to the wrapper. Also passed to sharp to use as a background when "letterboxing" an image to another aspect ratio.
    backgroundColor: String
  ): JSON!
  original: ImageSharpOriginal
  resize(width: Int, height: Int, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, jpegProgressive: Boolean = true, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, base64: Boolean = false, traceSVG: Potrace, toFormat: ImageFormat = AUTO, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int = 0, trim: Float = 0): ImageSharpResize
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type ImageSharpFixed {
  base64: String
  tracedSVG: String
  aspectRatio: Float
  width: Float!
  height: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  originalName: String
}

type ImageSharpFluid {
  base64: String
  tracedSVG: String
  aspectRatio: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  sizes: String!
  originalImg: String
  originalName: String
  presentationWidth: Int!
  presentationHeight: Int!
}

enum ImagePlaceholder {
  DOMINANT_COLOR
  TRACED_SVG
  BLURRED
  NONE
}

input BlurredOptions {
  # Width of the generated low-res preview. Default is 20px
  width: Int

  # Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this
  toFormat: ImageFormat
}

input JPGOptions {
  quality: Int
  progressive: Boolean = true
}

input PNGOptions {
  quality: Int
  compressionSpeed: Int = 4
}

input WebPOptions {
  quality: Int
}

input AVIFOptions {
  quality: Int
  lossless: Boolean
  speed: Int
}

input TransformOptions {
  grayscale: Boolean = false
  duotone: DuotoneGradient
  rotate: Int = 0
  trim: Float = 0
  cropFocus: ImageCropFocus = ATTENTION
  fit: ImageFit = COVER
}

type ImageSharpOriginal {
  width: Float
  height: Float
  src: String
}

type ImageSharpResize {
  src: String
  tracedSVG: String
  width: Int
  height: Int
  aspectRatio: Float
  originalName: String
}

type IoEventsYaml implements Node {
  location: LocationsYaml
  title: String
  description: String
  date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  event_url: String
  talks: [IoEventsYamlTalks]
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type IoEventsYamlTalks implements Node {
  authors: [AuthorsYaml!]!
  title: String
  description: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type LocationsYaml implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  name: String
  address: String
  url: String
  facebook: String
  description: String
  map: String
  yamlId: String
  twitter: String
}

type FaqYaml implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  header: String
  questions: [FaqYamlQuestions]
}

type FaqYamlQuestions {
  slug: String
  question: String
  answer: String
}

type DataYaml implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  bistro_du_centre: DataYamlBistro_du_centre
  boston_pizza_jonquiere: DataYamlBoston_pizza_jonquiere
  cafeclocheralma: DataYamlCafeclocheralma
  conformit: DataYamlConformit
  exode: DataYamlExode
  UQAC_Aquarium: DataYamlUQAC_Aquarium
  moulin_a_cie: DataYamlMoulin_a_cie
  lion_bleu: DataYamlLion_bleu
  pacini_alma: DataYamlPacini_alma
  mikes_chicoutimi_racine: DataYamlMikes_chicoutimi_racine
  stas_chicoutimi: DataYamlStas_chicoutimi
  tlm_chicoutimi: DataYamlTlm_chicoutimi
}

type DataYamlBistro_du_centre {
  name: String
  address: String
  url: String
  facebook: String
  description: String
  map: String
}

type DataYamlBoston_pizza_jonquiere {
  name: String
  address: String
  url: String
  facebook: String
  description: String
  map: String
}

type DataYamlCafeclocheralma {
  name: String
  address: String
  url: String
  facebook: String
  description: String
  map: String
}

type DataYamlConformit {
  name: String
  address: String
  url: String
  facebook: String
  description: String
  map: String
}

type DataYamlExode {
  name: String
  address: String
  url: String
  facebook: String
  description: String
  map: String
}

type DataYamlUQAC_Aquarium {
  name: String
  address: String
  url: String
  facebook: String
  description: String
  map: String
}

type DataYamlMoulin_a_cie {
  name: String
  address: String
  url: String
  facebook: String
  twitter: String
  description: String
  map: String
}

type DataYamlLion_bleu {
  name: String
  address: String
  url: String
  facebook: String
  description: String
  map: String
}

type DataYamlPacini_alma {
  name: String
  address: String
  url: String
  facebook: String
  description: String
  map: String
}

type DataYamlMikes_chicoutimi_racine {
  name: String
  address: String
  url: String
  facebook: String
  description: String
  map: String
}

type DataYamlStas_chicoutimi {
  name: String
  address: String
  url: String
  facebook: String
  description: String
  map: String
}

type DataYamlTlm_chicoutimi {
  name: String
  address: String
  url: String
  facebook: String
  description: String
  map: String
}

type AuthorsYaml implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  name: String
  twitter: String
  github: String
  website: String
  yamlId: String
  bio: String
}

type AdminYaml implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  backend: AdminYamlBackend
  local_backend: Boolean
  media_folder: String
  public_folder: String
  logo_url: String
  publish_mode: String
  open_authoring: Boolean
  collections: [AdminYamlCollections]
}

type AdminYamlBackend {
  name: String
  branch: String
  repo: String
  squash_merges: Boolean
  commit_messages: AdminYamlBackendCommit_messages
}

type AdminYamlBackendCommit_messages {
  create: String
  update: String
  delete: String
  uploadMedia: String
  deleteMedia: String
  openAuthoring: String
}

type AdminYamlCollections {
  name: String
  label: String
  label_singular: String
  folder: String
  create: Boolean
  delete: Boolean
  extension: String
  format: String
  slug: String
  summary: String
  sortable_fields: [String]
  view_groups: [AdminYamlCollectionsView_groups]
  fields: [AdminYamlCollectionsFields]
  identifier_field: String
}

type AdminYamlCollectionsView_groups {
  label: String
  field: String
  pattern: String
}

type AdminYamlCollectionsFields {
  label: String
  name: String
  widget: String
  hint: String
  required: Boolean
  collection: String
  searchFields: [String]
  valueField: String
  displayFields: [String]
  label_singular: String
  fields: [AdminYamlCollectionsFieldsFields]
  pattern: [String]
}

type AdminYamlCollectionsFieldsFields {
  label: String
  name: String
  widget: String
  required: Boolean
  label_singular: String
  collection: String
  searchFields: [String]
  valueField: String
  displayFields: [String]
  multiple: Boolean
  min: Int
}

type Query {
  file(sourceInstanceName: StringQueryOperatorInput, absolutePath: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, extension: StringQueryOperatorInput, size: IntQueryOperatorInput, prettySize: StringQueryOperatorInput, modifiedTime: DateQueryOperatorInput, accessTime: DateQueryOperatorInput, changeTime: DateQueryOperatorInput, birthTime: DateQueryOperatorInput, root: StringQueryOperatorInput, dir: StringQueryOperatorInput, base: StringQueryOperatorInput, ext: StringQueryOperatorInput, name: StringQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, dev: IntQueryOperatorInput, mode: IntQueryOperatorInput, nlink: IntQueryOperatorInput, uid: IntQueryOperatorInput, gid: IntQueryOperatorInput, rdev: IntQueryOperatorInput, ino: FloatQueryOperatorInput, atimeMs: FloatQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, atime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, ctime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, publicURL: StringQueryOperatorInput, childrenImageSharp: ImageSharpFilterListInput, childImageSharp: ImageSharpFilterInput, childrenIoEventsYaml: IoEventsYamlFilterListInput, childIoEventsYaml: IoEventsYamlFilterInput, childrenLocationsYaml: LocationsYamlFilterListInput, childLocationsYaml: LocationsYamlFilterInput, childrenFaqYaml: FaqYamlFilterListInput, childFaqYaml: FaqYamlFilterInput, childrenDataYaml: DataYamlFilterListInput, childDataYaml: DataYamlFilterInput, childrenAuthorsYaml: AuthorsYamlFilterListInput, childAuthorsYaml: AuthorsYamlFilterInput, childrenAdminYaml: AdminYamlFilterListInput, childAdminYaml: AdminYamlFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): File
  allFile(filter: FileFilterInput, sort: FileSortInput, skip: Int, limit: Int): FileConnection!
  directory(sourceInstanceName: StringQueryOperatorInput, absolutePath: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, extension: StringQueryOperatorInput, size: IntQueryOperatorInput, prettySize: StringQueryOperatorInput, modifiedTime: DateQueryOperatorInput, accessTime: DateQueryOperatorInput, changeTime: DateQueryOperatorInput, birthTime: DateQueryOperatorInput, root: StringQueryOperatorInput, dir: StringQueryOperatorInput, base: StringQueryOperatorInput, ext: StringQueryOperatorInput, name: StringQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, dev: IntQueryOperatorInput, mode: IntQueryOperatorInput, nlink: IntQueryOperatorInput, uid: IntQueryOperatorInput, gid: IntQueryOperatorInput, rdev: IntQueryOperatorInput, ino: FloatQueryOperatorInput, atimeMs: FloatQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, atime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, ctime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Directory
  allDirectory(filter: DirectoryFilterInput, sort: DirectorySortInput, skip: Int, limit: Int): DirectoryConnection!
  site(buildTime: DateQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput, port: IntQueryOperatorInput, host: StringQueryOperatorInput, pathPrefix: StringQueryOperatorInput, polyfill: BooleanQueryOperatorInput, jsxRuntime: StringQueryOperatorInput, trailingSlash: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Site
  allSite(filter: SiteFilterInput, sort: SiteSortInput, skip: Int, limit: Int): SiteConnection!
  siteFunction(functionRoute: StringQueryOperatorInput, pluginName: StringQueryOperatorInput, originalAbsoluteFilePath: StringQueryOperatorInput, originalRelativeFilePath: StringQueryOperatorInput, relativeCompiledFilePath: StringQueryOperatorInput, absoluteCompiledFilePath: StringQueryOperatorInput, matchPath: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): SiteFunction
  allSiteFunction(filter: SiteFunctionFilterInput, sort: SiteFunctionSortInput, skip: Int, limit: Int): SiteFunctionConnection!
  sitePage(path: StringQueryOperatorInput, component: StringQueryOperatorInput, internalComponentName: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, matchPath: StringQueryOperatorInput, pageContext: JSONQueryOperatorInput, pluginCreator: SitePluginFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): SitePage
  allSitePage(filter: SitePageFilterInput, sort: SitePageSortInput, skip: Int, limit: Int): SitePageConnection!
  sitePlugin(resolve: StringQueryOperatorInput, name: StringQueryOperatorInput, version: StringQueryOperatorInput, nodeAPIs: StringQueryOperatorInput, browserAPIs: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, pluginFilepath: StringQueryOperatorInput, pluginOptions: JSONQueryOperatorInput, packageJson: JSONQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): SitePlugin
  allSitePlugin(filter: SitePluginFilterInput, sort: SitePluginSortInput, skip: Int, limit: Int): SitePluginConnection!
  siteBuildMetadata(buildTime: DateQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): SiteBuildMetadata
  allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, sort: SiteBuildMetadataSortInput, skip: Int, limit: Int): SiteBuildMetadataConnection!
  markdownRemark(id: StringQueryOperatorInput, html: StringQueryOperatorInput, htmlAst: JSONQueryOperatorInput, excerpt: StringQueryOperatorInput, excerptAst: JSONQueryOperatorInput, headings: MarkdownHeadingFilterListInput, timeToRead: IntQueryOperatorInput, tableOfContents: StringQueryOperatorInput, wordCount: MarkdownWordCountFilterInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): MarkdownRemark
  allMarkdownRemark(filter: MarkdownRemarkFilterInput, sort: MarkdownRemarkSortInput, skip: Int, limit: Int): MarkdownRemarkConnection!
  imageSharp(fixed: ImageSharpFixedFilterInput, fluid: ImageSharpFluidFilterInput, gatsbyImageData: JSONQueryOperatorInput, original: ImageSharpOriginalFilterInput, resize: ImageSharpResizeFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): ImageSharp
  allImageSharp(filter: ImageSharpFilterInput, sort: ImageSharpSortInput, skip: Int, limit: Int): ImageSharpConnection!
  ioEventsYaml(location: LocationsYamlFilterInput, title: StringQueryOperatorInput, description: StringQueryOperatorInput, date: DateQueryOperatorInput, event_url: StringQueryOperatorInput, talks: IoEventsYamlTalksFilterListInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): IoEventsYaml
  allIoEventsYaml(filter: IoEventsYamlFilterInput, sort: IoEventsYamlSortInput, skip: Int, limit: Int): IoEventsYamlConnection!
  ioEventsYamlTalks(authors: AuthorsYamlFilterListInput, title: StringQueryOperatorInput, description: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): IoEventsYamlTalks
  allIoEventsYamlTalks(filter: IoEventsYamlTalksFilterInput, sort: IoEventsYamlTalksSortInput, skip: Int, limit: Int): IoEventsYamlTalksConnection!
  locationsYaml(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, name: StringQueryOperatorInput, address: StringQueryOperatorInput, url: StringQueryOperatorInput, facebook: StringQueryOperatorInput, description: StringQueryOperatorInput, map: StringQueryOperatorInput, yamlId: StringQueryOperatorInput, twitter: StringQueryOperatorInput): LocationsYaml
  allLocationsYaml(filter: LocationsYamlFilterInput, sort: LocationsYamlSortInput, skip: Int, limit: Int): LocationsYamlConnection!
  faqYaml(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, header: StringQueryOperatorInput, questions: FaqYamlQuestionsFilterListInput): FaqYaml
  allFaqYaml(filter: FaqYamlFilterInput, sort: FaqYamlSortInput, skip: Int, limit: Int): FaqYamlConnection!
  dataYaml(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, bistro_du_centre: DataYamlBistro_du_centreFilterInput, boston_pizza_jonquiere: DataYamlBoston_pizza_jonquiereFilterInput, cafeclocheralma: DataYamlCafeclocheralmaFilterInput, conformit: DataYamlConformitFilterInput, exode: DataYamlExodeFilterInput, UQAC_Aquarium: DataYamlUQAC_AquariumFilterInput, moulin_a_cie: DataYamlMoulin_a_cieFilterInput, lion_bleu: DataYamlLion_bleuFilterInput, pacini_alma: DataYamlPacini_almaFilterInput, mikes_chicoutimi_racine: DataYamlMikes_chicoutimi_racineFilterInput, stas_chicoutimi: DataYamlStas_chicoutimiFilterInput, tlm_chicoutimi: DataYamlTlm_chicoutimiFilterInput): DataYaml
  allDataYaml(filter: DataYamlFilterInput, sort: DataYamlSortInput, skip: Int, limit: Int): DataYamlConnection!
  authorsYaml(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, name: StringQueryOperatorInput, twitter: StringQueryOperatorInput, github: StringQueryOperatorInput, website: StringQueryOperatorInput, yamlId: StringQueryOperatorInput, bio: StringQueryOperatorInput): AuthorsYaml
  allAuthorsYaml(filter: AuthorsYamlFilterInput, sort: AuthorsYamlSortInput, skip: Int, limit: Int): AuthorsYamlConnection!
  adminYaml(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, backend: AdminYamlBackendFilterInput, local_backend: BooleanQueryOperatorInput, media_folder: StringQueryOperatorInput, public_folder: StringQueryOperatorInput, logo_url: StringQueryOperatorInput, publish_mode: StringQueryOperatorInput, open_authoring: BooleanQueryOperatorInput, collections: AdminYamlCollectionsFilterListInput): AdminYaml
  allAdminYaml(filter: AdminYamlFilterInput, sort: AdminYamlSortInput, skip: Int, limit: Int): AdminYamlConnection!
}

input StringQueryOperatorInput {
  eq: String
  ne: String
  in: [String]
  nin: [String]
  regex: String
  glob: String
}

input IntQueryOperatorInput {
  eq: Int
  ne: Int
  gt: Int
  gte: Int
  lt: Int
  lte: Int
  in: [Int]
  nin: [Int]
}

input DateQueryOperatorInput {
  eq: Date
  ne: Date
  gt: Date
  gte: Date
  lt: Date
  lte: Date
  in: [Date]
  nin: [Date]
}

input FloatQueryOperatorInput {
  eq: Float
  ne: Float
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  in: [Float]
  nin: [Float]
}

input ImageSharpFilterListInput {
  elemMatch: ImageSharpFilterInput
}

input ImageSharpFilterInput {
  fixed: ImageSharpFixedFilterInput
  fluid: ImageSharpFluidFilterInput
  gatsbyImageData: JSONQueryOperatorInput
  original: ImageSharpOriginalFilterInput
  resize: ImageSharpResizeFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input ImageSharpFixedFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  width: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
}

input ImageSharpFluidFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  sizes: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
}

input JSONQueryOperatorInput {
  eq: JSON
  ne: JSON
  in: [JSON]
  nin: [JSON]
  regex: JSON
  glob: JSON
}

input ImageSharpOriginalFilterInput {
  width: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
}

input ImageSharpResizeFilterInput {
  src: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  originalName: StringQueryOperatorInput
}

input NodeFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input NodeFilterListInput {
  elemMatch: NodeFilterInput
}

input InternalFilterInput {
  content: StringQueryOperatorInput
  contentDigest: StringQueryOperatorInput
  description: StringQueryOperatorInput
  fieldOwners: StringQueryOperatorInput
  ignoreType: BooleanQueryOperatorInput
  mediaType: StringQueryOperatorInput
  owner: StringQueryOperatorInput
  type: StringQueryOperatorInput
}

input BooleanQueryOperatorInput {
  eq: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
}

input IoEventsYamlFilterListInput {
  elemMatch: IoEventsYamlFilterInput
}

input IoEventsYamlFilterInput {
  location: LocationsYamlFilterInput
  title: StringQueryOperatorInput
  description: StringQueryOperatorInput
  date: DateQueryOperatorInput
  event_url: StringQueryOperatorInput
  talks: IoEventsYamlTalksFilterListInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input LocationsYamlFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  name: StringQueryOperatorInput
  address: StringQueryOperatorInput
  url: StringQueryOperatorInput
  facebook: StringQueryOperatorInput
  description: StringQueryOperatorInput
  map: StringQueryOperatorInput
  yamlId: StringQueryOperatorInput
  twitter: StringQueryOperatorInput
}

input IoEventsYamlTalksFilterListInput {
  elemMatch: IoEventsYamlTalksFilterInput
}

input IoEventsYamlTalksFilterInput {
  authors: AuthorsYamlFilterListInput
  title: StringQueryOperatorInput
  description: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input AuthorsYamlFilterListInput {
  elemMatch: AuthorsYamlFilterInput
}

input AuthorsYamlFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  name: StringQueryOperatorInput
  twitter: StringQueryOperatorInput
  github: StringQueryOperatorInput
  website: StringQueryOperatorInput
  yamlId: StringQueryOperatorInput
  bio: StringQueryOperatorInput
}

input LocationsYamlFilterListInput {
  elemMatch: LocationsYamlFilterInput
}

input FaqYamlFilterListInput {
  elemMatch: FaqYamlFilterInput
}

input FaqYamlFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  header: StringQueryOperatorInput
  questions: FaqYamlQuestionsFilterListInput
}

input FaqYamlQuestionsFilterListInput {
  elemMatch: FaqYamlQuestionsFilterInput
}

input FaqYamlQuestionsFilterInput {
  slug: StringQueryOperatorInput
  question: StringQueryOperatorInput
  answer: StringQueryOperatorInput
}

input DataYamlFilterListInput {
  elemMatch: DataYamlFilterInput
}

input DataYamlFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  bistro_du_centre: DataYamlBistro_du_centreFilterInput
  boston_pizza_jonquiere: DataYamlBoston_pizza_jonquiereFilterInput
  cafeclocheralma: DataYamlCafeclocheralmaFilterInput
  conformit: DataYamlConformitFilterInput
  exode: DataYamlExodeFilterInput
  UQAC_Aquarium: DataYamlUQAC_AquariumFilterInput
  moulin_a_cie: DataYamlMoulin_a_cieFilterInput
  lion_bleu: DataYamlLion_bleuFilterInput
  pacini_alma: DataYamlPacini_almaFilterInput
  mikes_chicoutimi_racine: DataYamlMikes_chicoutimi_racineFilterInput
  stas_chicoutimi: DataYamlStas_chicoutimiFilterInput
  tlm_chicoutimi: DataYamlTlm_chicoutimiFilterInput
}

input DataYamlBistro_du_centreFilterInput {
  name: StringQueryOperatorInput
  address: StringQueryOperatorInput
  url: StringQueryOperatorInput
  facebook: StringQueryOperatorInput
  description: StringQueryOperatorInput
  map: StringQueryOperatorInput
}

input DataYamlBoston_pizza_jonquiereFilterInput {
  name: StringQueryOperatorInput
  address: StringQueryOperatorInput
  url: StringQueryOperatorInput
  facebook: StringQueryOperatorInput
  description: StringQueryOperatorInput
  map: StringQueryOperatorInput
}

input DataYamlCafeclocheralmaFilterInput {
  name: StringQueryOperatorInput
  address: StringQueryOperatorInput
  url: StringQueryOperatorInput
  facebook: StringQueryOperatorInput
  description: StringQueryOperatorInput
  map: StringQueryOperatorInput
}

input DataYamlConformitFilterInput {
  name: StringQueryOperatorInput
  address: StringQueryOperatorInput
  url: StringQueryOperatorInput
  facebook: StringQueryOperatorInput
  description: StringQueryOperatorInput
  map: StringQueryOperatorInput
}

input DataYamlExodeFilterInput {
  name: StringQueryOperatorInput
  address: StringQueryOperatorInput
  url: StringQueryOperatorInput
  facebook: StringQueryOperatorInput
  description: StringQueryOperatorInput
  map: StringQueryOperatorInput
}

input DataYamlUQAC_AquariumFilterInput {
  name: StringQueryOperatorInput
  address: StringQueryOperatorInput
  url: StringQueryOperatorInput
  facebook: StringQueryOperatorInput
  description: StringQueryOperatorInput
  map: StringQueryOperatorInput
}

input DataYamlMoulin_a_cieFilterInput {
  name: StringQueryOperatorInput
  address: StringQueryOperatorInput
  url: StringQueryOperatorInput
  facebook: StringQueryOperatorInput
  twitter: StringQueryOperatorInput
  description: StringQueryOperatorInput
  map: StringQueryOperatorInput
}

input DataYamlLion_bleuFilterInput {
  name: StringQueryOperatorInput
  address: StringQueryOperatorInput
  url: StringQueryOperatorInput
  facebook: StringQueryOperatorInput
  description: StringQueryOperatorInput
  map: StringQueryOperatorInput
}

input DataYamlPacini_almaFilterInput {
  name: StringQueryOperatorInput
  address: StringQueryOperatorInput
  url: StringQueryOperatorInput
  facebook: StringQueryOperatorInput
  description: StringQueryOperatorInput
  map: StringQueryOperatorInput
}

input DataYamlMikes_chicoutimi_racineFilterInput {
  name: StringQueryOperatorInput
  address: StringQueryOperatorInput
  url: StringQueryOperatorInput
  facebook: StringQueryOperatorInput
  description: StringQueryOperatorInput
  map: StringQueryOperatorInput
}

input DataYamlStas_chicoutimiFilterInput {
  name: StringQueryOperatorInput
  address: StringQueryOperatorInput
  url: StringQueryOperatorInput
  facebook: StringQueryOperatorInput
  description: StringQueryOperatorInput
  map: StringQueryOperatorInput
}

input DataYamlTlm_chicoutimiFilterInput {
  name: StringQueryOperatorInput
  address: StringQueryOperatorInput
  url: StringQueryOperatorInput
  facebook: StringQueryOperatorInput
  description: StringQueryOperatorInput
  map: StringQueryOperatorInput
}

input AdminYamlFilterListInput {
  elemMatch: AdminYamlFilterInput
}

input AdminYamlFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  backend: AdminYamlBackendFilterInput
  local_backend: BooleanQueryOperatorInput
  media_folder: StringQueryOperatorInput
  public_folder: StringQueryOperatorInput
  logo_url: StringQueryOperatorInput
  publish_mode: StringQueryOperatorInput
  open_authoring: BooleanQueryOperatorInput
  collections: AdminYamlCollectionsFilterListInput
}

input AdminYamlBackendFilterInput {
  name: StringQueryOperatorInput
  branch: StringQueryOperatorInput
  repo: StringQueryOperatorInput
  squash_merges: BooleanQueryOperatorInput
  commit_messages: AdminYamlBackendCommit_messagesFilterInput
}

input AdminYamlBackendCommit_messagesFilterInput {
  create: StringQueryOperatorInput
  update: StringQueryOperatorInput
  delete: StringQueryOperatorInput
  uploadMedia: StringQueryOperatorInput
  deleteMedia: StringQueryOperatorInput
  openAuthoring: StringQueryOperatorInput
}

input AdminYamlCollectionsFilterListInput {
  elemMatch: AdminYamlCollectionsFilterInput
}

input AdminYamlCollectionsFilterInput {
  name: StringQueryOperatorInput
  label: StringQueryOperatorInput
  label_singular: StringQueryOperatorInput
  folder: StringQueryOperatorInput
  create: BooleanQueryOperatorInput
  delete: BooleanQueryOperatorInput
  extension: StringQueryOperatorInput
  format: StringQueryOperatorInput
  slug: StringQueryOperatorInput
  summary: StringQueryOperatorInput
  sortable_fields: StringQueryOperatorInput
  view_groups: AdminYamlCollectionsView_groupsFilterListInput
  fields: AdminYamlCollectionsFieldsFilterListInput
  identifier_field: StringQueryOperatorInput
}

input AdminYamlCollectionsView_groupsFilterListInput {
  elemMatch: AdminYamlCollectionsView_groupsFilterInput
}

input AdminYamlCollectionsView_groupsFilterInput {
  label: StringQueryOperatorInput
  field: StringQueryOperatorInput
  pattern: StringQueryOperatorInput
}

input AdminYamlCollectionsFieldsFilterListInput {
  elemMatch: AdminYamlCollectionsFieldsFilterInput
}

input AdminYamlCollectionsFieldsFilterInput {
  label: StringQueryOperatorInput
  name: StringQueryOperatorInput
  widget: StringQueryOperatorInput
  hint: StringQueryOperatorInput
  required: BooleanQueryOperatorInput
  collection: StringQueryOperatorInput
  searchFields: StringQueryOperatorInput
  valueField: StringQueryOperatorInput
  displayFields: StringQueryOperatorInput
  label_singular: StringQueryOperatorInput
  fields: AdminYamlCollectionsFieldsFieldsFilterListInput
  pattern: StringQueryOperatorInput
}

input AdminYamlCollectionsFieldsFieldsFilterListInput {
  elemMatch: AdminYamlCollectionsFieldsFieldsFilterInput
}

input AdminYamlCollectionsFieldsFieldsFilterInput {
  label: StringQueryOperatorInput
  name: StringQueryOperatorInput
  widget: StringQueryOperatorInput
  required: BooleanQueryOperatorInput
  label_singular: StringQueryOperatorInput
  collection: StringQueryOperatorInput
  searchFields: StringQueryOperatorInput
  valueField: StringQueryOperatorInput
  displayFields: StringQueryOperatorInput
  multiple: BooleanQueryOperatorInput
  min: IntQueryOperatorInput
}

type FileConnection {
  totalCount: Int!
  edges: [FileEdge!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  distinct(field: FileFieldsEnum!): [String!]!
  max(field: FileFieldsEnum!): Float
  min(field: FileFieldsEnum!): Float
  sum(field: FileFieldsEnum!): Float
  group(skip: Int, limit: Int, field: FileFieldsEnum!): [FileGroupConnection!]!
}

type FileEdge {
  next: File
  node: File!
  previous: File
}

type PageInfo {
  currentPage: Int!
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  itemCount: Int!
  pageCount: Int!
  perPage: Int
  totalCount: Int!
}

enum FileFieldsEnum {
  sourceInstanceName
  absolutePath
  relativePath
  extension
  size
  prettySize
  modifiedTime
  accessTime
  changeTime
  birthTime
  root
  dir
  base
  ext
  name
  relativeDirectory
  dev
  mode
  nlink
  uid
  gid
  rdev
  ino
  atimeMs
  mtimeMs
  ctimeMs
  atime
  mtime
  ctime
  birthtime
  birthtimeMs
  blksize
  blocks
  publicURL
  childrenImageSharp
  childrenImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___original___width
  childrenImageSharp___original___height
  childrenImageSharp___original___src
  childrenImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___id
  childrenImageSharp___parent___id
  childrenImageSharp___parent___parent___id
  childrenImageSharp___parent___parent___children
  childrenImageSharp___parent___children
  childrenImageSharp___parent___children___id
  childrenImageSharp___parent___children___children
  childrenImageSharp___parent___internal___content
  childrenImageSharp___parent___internal___contentDigest
  childrenImageSharp___parent___internal___description
  childrenImageSharp___parent___internal___fieldOwners
  childrenImageSharp___parent___internal___ignoreType
  childrenImageSharp___parent___internal___mediaType
  childrenImageSharp___parent___internal___owner
  childrenImageSharp___parent___internal___type
  childrenImageSharp___children
  childrenImageSharp___children___id
  childrenImageSharp___children___parent___id
  childrenImageSharp___children___parent___children
  childrenImageSharp___children___children
  childrenImageSharp___children___children___id
  childrenImageSharp___children___children___children
  childrenImageSharp___children___internal___content
  childrenImageSharp___children___internal___contentDigest
  childrenImageSharp___children___internal___description
  childrenImageSharp___children___internal___fieldOwners
  childrenImageSharp___children___internal___ignoreType
  childrenImageSharp___children___internal___mediaType
  childrenImageSharp___children___internal___owner
  childrenImageSharp___children___internal___type
  childrenImageSharp___internal___content
  childrenImageSharp___internal___contentDigest
  childrenImageSharp___internal___description
  childrenImageSharp___internal___fieldOwners
  childrenImageSharp___internal___ignoreType
  childrenImageSharp___internal___mediaType
  childrenImageSharp___internal___owner
  childrenImageSharp___internal___type
  childImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___width
  childImageSharp___original___height
  childImageSharp___original___src
  childImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___id
  childImageSharp___parent___id
  childImageSharp___parent___parent___id
  childImageSharp___parent___parent___children
  childImageSharp___parent___children
  childImageSharp___parent___children___id
  childImageSharp___parent___children___children
  childImageSharp___parent___internal___content
  childImageSharp___parent___internal___contentDigest
  childImageSharp___parent___internal___description
  childImageSharp___parent___internal___fieldOwners
  childImageSharp___parent___internal___ignoreType
  childImageSharp___parent___internal___mediaType
  childImageSharp___parent___internal___owner
  childImageSharp___parent___internal___type
  childImageSharp___children
  childImageSharp___children___id
  childImageSharp___children___parent___id
  childImageSharp___children___parent___children
  childImageSharp___children___children
  childImageSharp___children___children___id
  childImageSharp___children___children___children
  childImageSharp___children___internal___content
  childImageSharp___children___internal___contentDigest
  childImageSharp___children___internal___description
  childImageSharp___children___internal___fieldOwners
  childImageSharp___children___internal___ignoreType
  childImageSharp___children___internal___mediaType
  childImageSharp___children___internal___owner
  childImageSharp___children___internal___type
  childImageSharp___internal___content
  childImageSharp___internal___contentDigest
  childImageSharp___internal___description
  childImageSharp___internal___fieldOwners
  childImageSharp___internal___ignoreType
  childImageSharp___internal___mediaType
  childImageSharp___internal___owner
  childImageSharp___internal___type
  childrenIoEventsYaml
  childrenIoEventsYaml___location___id
  childrenIoEventsYaml___location___parent___id
  childrenIoEventsYaml___location___parent___children
  childrenIoEventsYaml___location___children
  childrenIoEventsYaml___location___children___id
  childrenIoEventsYaml___location___children___children
  childrenIoEventsYaml___location___internal___content
  childrenIoEventsYaml___location___internal___contentDigest
  childrenIoEventsYaml___location___internal___description
  childrenIoEventsYaml___location___internal___fieldOwners
  childrenIoEventsYaml___location___internal___ignoreType
  childrenIoEventsYaml___location___internal___mediaType
  childrenIoEventsYaml___location___internal___owner
  childrenIoEventsYaml___location___internal___type
  childrenIoEventsYaml___location___name
  childrenIoEventsYaml___location___address
  childrenIoEventsYaml___location___url
  childrenIoEventsYaml___location___facebook
  childrenIoEventsYaml___location___description
  childrenIoEventsYaml___location___map
  childrenIoEventsYaml___location___yamlId
  childrenIoEventsYaml___location___twitter
  childrenIoEventsYaml___title
  childrenIoEventsYaml___description
  childrenIoEventsYaml___date
  childrenIoEventsYaml___event_url
  childrenIoEventsYaml___talks
  childrenIoEventsYaml___talks___authors
  childrenIoEventsYaml___talks___authors___id
  childrenIoEventsYaml___talks___authors___children
  childrenIoEventsYaml___talks___authors___name
  childrenIoEventsYaml___talks___authors___twitter
  childrenIoEventsYaml___talks___authors___github
  childrenIoEventsYaml___talks___authors___website
  childrenIoEventsYaml___talks___authors___yamlId
  childrenIoEventsYaml___talks___authors___bio
  childrenIoEventsYaml___talks___title
  childrenIoEventsYaml___talks___description
  childrenIoEventsYaml___talks___id
  childrenIoEventsYaml___talks___parent___id
  childrenIoEventsYaml___talks___parent___children
  childrenIoEventsYaml___talks___children
  childrenIoEventsYaml___talks___children___id
  childrenIoEventsYaml___talks___children___children
  childrenIoEventsYaml___talks___internal___content
  childrenIoEventsYaml___talks___internal___contentDigest
  childrenIoEventsYaml___talks___internal___description
  childrenIoEventsYaml___talks___internal___fieldOwners
  childrenIoEventsYaml___talks___internal___ignoreType
  childrenIoEventsYaml___talks___internal___mediaType
  childrenIoEventsYaml___talks___internal___owner
  childrenIoEventsYaml___talks___internal___type
  childrenIoEventsYaml___id
  childrenIoEventsYaml___parent___id
  childrenIoEventsYaml___parent___parent___id
  childrenIoEventsYaml___parent___parent___children
  childrenIoEventsYaml___parent___children
  childrenIoEventsYaml___parent___children___id
  childrenIoEventsYaml___parent___children___children
  childrenIoEventsYaml___parent___internal___content
  childrenIoEventsYaml___parent___internal___contentDigest
  childrenIoEventsYaml___parent___internal___description
  childrenIoEventsYaml___parent___internal___fieldOwners
  childrenIoEventsYaml___parent___internal___ignoreType
  childrenIoEventsYaml___parent___internal___mediaType
  childrenIoEventsYaml___parent___internal___owner
  childrenIoEventsYaml___parent___internal___type
  childrenIoEventsYaml___children
  childrenIoEventsYaml___children___id
  childrenIoEventsYaml___children___parent___id
  childrenIoEventsYaml___children___parent___children
  childrenIoEventsYaml___children___children
  childrenIoEventsYaml___children___children___id
  childrenIoEventsYaml___children___children___children
  childrenIoEventsYaml___children___internal___content
  childrenIoEventsYaml___children___internal___contentDigest
  childrenIoEventsYaml___children___internal___description
  childrenIoEventsYaml___children___internal___fieldOwners
  childrenIoEventsYaml___children___internal___ignoreType
  childrenIoEventsYaml___children___internal___mediaType
  childrenIoEventsYaml___children___internal___owner
  childrenIoEventsYaml___children___internal___type
  childrenIoEventsYaml___internal___content
  childrenIoEventsYaml___internal___contentDigest
  childrenIoEventsYaml___internal___description
  childrenIoEventsYaml___internal___fieldOwners
  childrenIoEventsYaml___internal___ignoreType
  childrenIoEventsYaml___internal___mediaType
  childrenIoEventsYaml___internal___owner
  childrenIoEventsYaml___internal___type
  childIoEventsYaml___location___id
  childIoEventsYaml___location___parent___id
  childIoEventsYaml___location___parent___children
  childIoEventsYaml___location___children
  childIoEventsYaml___location___children___id
  childIoEventsYaml___location___children___children
  childIoEventsYaml___location___internal___content
  childIoEventsYaml___location___internal___contentDigest
  childIoEventsYaml___location___internal___description
  childIoEventsYaml___location___internal___fieldOwners
  childIoEventsYaml___location___internal___ignoreType
  childIoEventsYaml___location___internal___mediaType
  childIoEventsYaml___location___internal___owner
  childIoEventsYaml___location___internal___type
  childIoEventsYaml___location___name
  childIoEventsYaml___location___address
  childIoEventsYaml___location___url
  childIoEventsYaml___location___facebook
  childIoEventsYaml___location___description
  childIoEventsYaml___location___map
  childIoEventsYaml___location___yamlId
  childIoEventsYaml___location___twitter
  childIoEventsYaml___title
  childIoEventsYaml___description
  childIoEventsYaml___date
  childIoEventsYaml___event_url
  childIoEventsYaml___talks
  childIoEventsYaml___talks___authors
  childIoEventsYaml___talks___authors___id
  childIoEventsYaml___talks___authors___children
  childIoEventsYaml___talks___authors___name
  childIoEventsYaml___talks___authors___twitter
  childIoEventsYaml___talks___authors___github
  childIoEventsYaml___talks___authors___website
  childIoEventsYaml___talks___authors___yamlId
  childIoEventsYaml___talks___authors___bio
  childIoEventsYaml___talks___title
  childIoEventsYaml___talks___description
  childIoEventsYaml___talks___id
  childIoEventsYaml___talks___parent___id
  childIoEventsYaml___talks___parent___children
  childIoEventsYaml___talks___children
  childIoEventsYaml___talks___children___id
  childIoEventsYaml___talks___children___children
  childIoEventsYaml___talks___internal___content
  childIoEventsYaml___talks___internal___contentDigest
  childIoEventsYaml___talks___internal___description
  childIoEventsYaml___talks___internal___fieldOwners
  childIoEventsYaml___talks___internal___ignoreType
  childIoEventsYaml___talks___internal___mediaType
  childIoEventsYaml___talks___internal___owner
  childIoEventsYaml___talks___internal___type
  childIoEventsYaml___id
  childIoEventsYaml___parent___id
  childIoEventsYaml___parent___parent___id
  childIoEventsYaml___parent___parent___children
  childIoEventsYaml___parent___children
  childIoEventsYaml___parent___children___id
  childIoEventsYaml___parent___children___children
  childIoEventsYaml___parent___internal___content
  childIoEventsYaml___parent___internal___contentDigest
  childIoEventsYaml___parent___internal___description
  childIoEventsYaml___parent___internal___fieldOwners
  childIoEventsYaml___parent___internal___ignoreType
  childIoEventsYaml___parent___internal___mediaType
  childIoEventsYaml___parent___internal___owner
  childIoEventsYaml___parent___internal___type
  childIoEventsYaml___children
  childIoEventsYaml___children___id
  childIoEventsYaml___children___parent___id
  childIoEventsYaml___children___parent___children
  childIoEventsYaml___children___children
  childIoEventsYaml___children___children___id
  childIoEventsYaml___children___children___children
  childIoEventsYaml___children___internal___content
  childIoEventsYaml___children___internal___contentDigest
  childIoEventsYaml___children___internal___description
  childIoEventsYaml___children___internal___fieldOwners
  childIoEventsYaml___children___internal___ignoreType
  childIoEventsYaml___children___internal___mediaType
  childIoEventsYaml___children___internal___owner
  childIoEventsYaml___children___internal___type
  childIoEventsYaml___internal___content
  childIoEventsYaml___internal___contentDigest
  childIoEventsYaml___internal___description
  childIoEventsYaml___internal___fieldOwners
  childIoEventsYaml___internal___ignoreType
  childIoEventsYaml___internal___mediaType
  childIoEventsYaml___internal___owner
  childIoEventsYaml___internal___type
  childrenLocationsYaml
  childrenLocationsYaml___id
  childrenLocationsYaml___parent___id
  childrenLocationsYaml___parent___parent___id
  childrenLocationsYaml___parent___parent___children
  childrenLocationsYaml___parent___children
  childrenLocationsYaml___parent___children___id
  childrenLocationsYaml___parent___children___children
  childrenLocationsYaml___parent___internal___content
  childrenLocationsYaml___parent___internal___contentDigest
  childrenLocationsYaml___parent___internal___description
  childrenLocationsYaml___parent___internal___fieldOwners
  childrenLocationsYaml___parent___internal___ignoreType
  childrenLocationsYaml___parent___internal___mediaType
  childrenLocationsYaml___parent___internal___owner
  childrenLocationsYaml___parent___internal___type
  childrenLocationsYaml___children
  childrenLocationsYaml___children___id
  childrenLocationsYaml___children___parent___id
  childrenLocationsYaml___children___parent___children
  childrenLocationsYaml___children___children
  childrenLocationsYaml___children___children___id
  childrenLocationsYaml___children___children___children
  childrenLocationsYaml___children___internal___content
  childrenLocationsYaml___children___internal___contentDigest
  childrenLocationsYaml___children___internal___description
  childrenLocationsYaml___children___internal___fieldOwners
  childrenLocationsYaml___children___internal___ignoreType
  childrenLocationsYaml___children___internal___mediaType
  childrenLocationsYaml___children___internal___owner
  childrenLocationsYaml___children___internal___type
  childrenLocationsYaml___internal___content
  childrenLocationsYaml___internal___contentDigest
  childrenLocationsYaml___internal___description
  childrenLocationsYaml___internal___fieldOwners
  childrenLocationsYaml___internal___ignoreType
  childrenLocationsYaml___internal___mediaType
  childrenLocationsYaml___internal___owner
  childrenLocationsYaml___internal___type
  childrenLocationsYaml___name
  childrenLocationsYaml___address
  childrenLocationsYaml___url
  childrenLocationsYaml___facebook
  childrenLocationsYaml___description
  childrenLocationsYaml___map
  childrenLocationsYaml___yamlId
  childrenLocationsYaml___twitter
  childLocationsYaml___id
  childLocationsYaml___parent___id
  childLocationsYaml___parent___parent___id
  childLocationsYaml___parent___parent___children
  childLocationsYaml___parent___children
  childLocationsYaml___parent___children___id
  childLocationsYaml___parent___children___children
  childLocationsYaml___parent___internal___content
  childLocationsYaml___parent___internal___contentDigest
  childLocationsYaml___parent___internal___description
  childLocationsYaml___parent___internal___fieldOwners
  childLocationsYaml___parent___internal___ignoreType
  childLocationsYaml___parent___internal___mediaType
  childLocationsYaml___parent___internal___owner
  childLocationsYaml___parent___internal___type
  childLocationsYaml___children
  childLocationsYaml___children___id
  childLocationsYaml___children___parent___id
  childLocationsYaml___children___parent___children
  childLocationsYaml___children___children
  childLocationsYaml___children___children___id
  childLocationsYaml___children___children___children
  childLocationsYaml___children___internal___content
  childLocationsYaml___children___internal___contentDigest
  childLocationsYaml___children___internal___description
  childLocationsYaml___children___internal___fieldOwners
  childLocationsYaml___children___internal___ignoreType
  childLocationsYaml___children___internal___mediaType
  childLocationsYaml___children___internal___owner
  childLocationsYaml___children___internal___type
  childLocationsYaml___internal___content
  childLocationsYaml___internal___contentDigest
  childLocationsYaml___internal___description
  childLocationsYaml___internal___fieldOwners
  childLocationsYaml___internal___ignoreType
  childLocationsYaml___internal___mediaType
  childLocationsYaml___internal___owner
  childLocationsYaml___internal___type
  childLocationsYaml___name
  childLocationsYaml___address
  childLocationsYaml___url
  childLocationsYaml___facebook
  childLocationsYaml___description
  childLocationsYaml___map
  childLocationsYaml___yamlId
  childLocationsYaml___twitter
  childrenFaqYaml
  childrenFaqYaml___id
  childrenFaqYaml___parent___id
  childrenFaqYaml___parent___parent___id
  childrenFaqYaml___parent___parent___children
  childrenFaqYaml___parent___children
  childrenFaqYaml___parent___children___id
  childrenFaqYaml___parent___children___children
  childrenFaqYaml___parent___internal___content
  childrenFaqYaml___parent___internal___contentDigest
  childrenFaqYaml___parent___internal___description
  childrenFaqYaml___parent___internal___fieldOwners
  childrenFaqYaml___parent___internal___ignoreType
  childrenFaqYaml___parent___internal___mediaType
  childrenFaqYaml___parent___internal___owner
  childrenFaqYaml___parent___internal___type
  childrenFaqYaml___children
  childrenFaqYaml___children___id
  childrenFaqYaml___children___parent___id
  childrenFaqYaml___children___parent___children
  childrenFaqYaml___children___children
  childrenFaqYaml___children___children___id
  childrenFaqYaml___children___children___children
  childrenFaqYaml___children___internal___content
  childrenFaqYaml___children___internal___contentDigest
  childrenFaqYaml___children___internal___description
  childrenFaqYaml___children___internal___fieldOwners
  childrenFaqYaml___children___internal___ignoreType
  childrenFaqYaml___children___internal___mediaType
  childrenFaqYaml___children___internal___owner
  childrenFaqYaml___children___internal___type
  childrenFaqYaml___internal___content
  childrenFaqYaml___internal___contentDigest
  childrenFaqYaml___internal___description
  childrenFaqYaml___internal___fieldOwners
  childrenFaqYaml___internal___ignoreType
  childrenFaqYaml___internal___mediaType
  childrenFaqYaml___internal___owner
  childrenFaqYaml___internal___type
  childrenFaqYaml___header
  childrenFaqYaml___questions
  childrenFaqYaml___questions___slug
  childrenFaqYaml___questions___question
  childrenFaqYaml___questions___answer
  childFaqYaml___id
  childFaqYaml___parent___id
  childFaqYaml___parent___parent___id
  childFaqYaml___parent___parent___children
  childFaqYaml___parent___children
  childFaqYaml___parent___children___id
  childFaqYaml___parent___children___children
  childFaqYaml___parent___internal___content
  childFaqYaml___parent___internal___contentDigest
  childFaqYaml___parent___internal___description
  childFaqYaml___parent___internal___fieldOwners
  childFaqYaml___parent___internal___ignoreType
  childFaqYaml___parent___internal___mediaType
  childFaqYaml___parent___internal___owner
  childFaqYaml___parent___internal___type
  childFaqYaml___children
  childFaqYaml___children___id
  childFaqYaml___children___parent___id
  childFaqYaml___children___parent___children
  childFaqYaml___children___children
  childFaqYaml___children___children___id
  childFaqYaml___children___children___children
  childFaqYaml___children___internal___content
  childFaqYaml___children___internal___contentDigest
  childFaqYaml___children___internal___description
  childFaqYaml___children___internal___fieldOwners
  childFaqYaml___children___internal___ignoreType
  childFaqYaml___children___internal___mediaType
  childFaqYaml___children___internal___owner
  childFaqYaml___children___internal___type
  childFaqYaml___internal___content
  childFaqYaml___internal___contentDigest
  childFaqYaml___internal___description
  childFaqYaml___internal___fieldOwners
  childFaqYaml___internal___ignoreType
  childFaqYaml___internal___mediaType
  childFaqYaml___internal___owner
  childFaqYaml___internal___type
  childFaqYaml___header
  childFaqYaml___questions
  childFaqYaml___questions___slug
  childFaqYaml___questions___question
  childFaqYaml___questions___answer
  childrenDataYaml
  childrenDataYaml___id
  childrenDataYaml___parent___id
  childrenDataYaml___parent___parent___id
  childrenDataYaml___parent___parent___children
  childrenDataYaml___parent___children
  childrenDataYaml___parent___children___id
  childrenDataYaml___parent___children___children
  childrenDataYaml___parent___internal___content
  childrenDataYaml___parent___internal___contentDigest
  childrenDataYaml___parent___internal___description
  childrenDataYaml___parent___internal___fieldOwners
  childrenDataYaml___parent___internal___ignoreType
  childrenDataYaml___parent___internal___mediaType
  childrenDataYaml___parent___internal___owner
  childrenDataYaml___parent___internal___type
  childrenDataYaml___children
  childrenDataYaml___children___id
  childrenDataYaml___children___parent___id
  childrenDataYaml___children___parent___children
  childrenDataYaml___children___children
  childrenDataYaml___children___children___id
  childrenDataYaml___children___children___children
  childrenDataYaml___children___internal___content
  childrenDataYaml___children___internal___contentDigest
  childrenDataYaml___children___internal___description
  childrenDataYaml___children___internal___fieldOwners
  childrenDataYaml___children___internal___ignoreType
  childrenDataYaml___children___internal___mediaType
  childrenDataYaml___children___internal___owner
  childrenDataYaml___children___internal___type
  childrenDataYaml___internal___content
  childrenDataYaml___internal___contentDigest
  childrenDataYaml___internal___description
  childrenDataYaml___internal___fieldOwners
  childrenDataYaml___internal___ignoreType
  childrenDataYaml___internal___mediaType
  childrenDataYaml___internal___owner
  childrenDataYaml___internal___type
  childrenDataYaml___bistro_du_centre___name
  childrenDataYaml___bistro_du_centre___address
  childrenDataYaml___bistro_du_centre___url
  childrenDataYaml___bistro_du_centre___facebook
  childrenDataYaml___bistro_du_centre___description
  childrenDataYaml___bistro_du_centre___map
  childrenDataYaml___boston_pizza_jonquiere___name
  childrenDataYaml___boston_pizza_jonquiere___address
  childrenDataYaml___boston_pizza_jonquiere___url
  childrenDataYaml___boston_pizza_jonquiere___facebook
  childrenDataYaml___boston_pizza_jonquiere___description
  childrenDataYaml___boston_pizza_jonquiere___map
  childrenDataYaml___cafeclocheralma___name
  childrenDataYaml___cafeclocheralma___address
  childrenDataYaml___cafeclocheralma___url
  childrenDataYaml___cafeclocheralma___facebook
  childrenDataYaml___cafeclocheralma___description
  childrenDataYaml___cafeclocheralma___map
  childrenDataYaml___conformit___name
  childrenDataYaml___conformit___address
  childrenDataYaml___conformit___url
  childrenDataYaml___conformit___facebook
  childrenDataYaml___conformit___description
  childrenDataYaml___conformit___map
  childrenDataYaml___exode___name
  childrenDataYaml___exode___address
  childrenDataYaml___exode___url
  childrenDataYaml___exode___facebook
  childrenDataYaml___exode___description
  childrenDataYaml___exode___map
  childrenDataYaml___UQAC_Aquarium___name
  childrenDataYaml___UQAC_Aquarium___address
  childrenDataYaml___UQAC_Aquarium___url
  childrenDataYaml___UQAC_Aquarium___facebook
  childrenDataYaml___UQAC_Aquarium___description
  childrenDataYaml___UQAC_Aquarium___map
  childrenDataYaml___moulin_a_cie___name
  childrenDataYaml___moulin_a_cie___address
  childrenDataYaml___moulin_a_cie___url
  childrenDataYaml___moulin_a_cie___facebook
  childrenDataYaml___moulin_a_cie___twitter
  childrenDataYaml___moulin_a_cie___description
  childrenDataYaml___moulin_a_cie___map
  childrenDataYaml___lion_bleu___name
  childrenDataYaml___lion_bleu___address
  childrenDataYaml___lion_bleu___url
  childrenDataYaml___lion_bleu___facebook
  childrenDataYaml___lion_bleu___description
  childrenDataYaml___lion_bleu___map
  childrenDataYaml___pacini_alma___name
  childrenDataYaml___pacini_alma___address
  childrenDataYaml___pacini_alma___url
  childrenDataYaml___pacini_alma___facebook
  childrenDataYaml___pacini_alma___description
  childrenDataYaml___pacini_alma___map
  childrenDataYaml___mikes_chicoutimi_racine___name
  childrenDataYaml___mikes_chicoutimi_racine___address
  childrenDataYaml___mikes_chicoutimi_racine___url
  childrenDataYaml___mikes_chicoutimi_racine___facebook
  childrenDataYaml___mikes_chicoutimi_racine___description
  childrenDataYaml___mikes_chicoutimi_racine___map
  childrenDataYaml___stas_chicoutimi___name
  childrenDataYaml___stas_chicoutimi___address
  childrenDataYaml___stas_chicoutimi___url
  childrenDataYaml___stas_chicoutimi___facebook
  childrenDataYaml___stas_chicoutimi___description
  childrenDataYaml___stas_chicoutimi___map
  childrenDataYaml___tlm_chicoutimi___name
  childrenDataYaml___tlm_chicoutimi___address
  childrenDataYaml___tlm_chicoutimi___url
  childrenDataYaml___tlm_chicoutimi___facebook
  childrenDataYaml___tlm_chicoutimi___description
  childrenDataYaml___tlm_chicoutimi___map
  childDataYaml___id
  childDataYaml___parent___id
  childDataYaml___parent___parent___id
  childDataYaml___parent___parent___children
  childDataYaml___parent___children
  childDataYaml___parent___children___id
  childDataYaml___parent___children___children
  childDataYaml___parent___internal___content
  childDataYaml___parent___internal___contentDigest
  childDataYaml___parent___internal___description
  childDataYaml___parent___internal___fieldOwners
  childDataYaml___parent___internal___ignoreType
  childDataYaml___parent___internal___mediaType
  childDataYaml___parent___internal___owner
  childDataYaml___parent___internal___type
  childDataYaml___children
  childDataYaml___children___id
  childDataYaml___children___parent___id
  childDataYaml___children___parent___children
  childDataYaml___children___children
  childDataYaml___children___children___id
  childDataYaml___children___children___children
  childDataYaml___children___internal___content
  childDataYaml___children___internal___contentDigest
  childDataYaml___children___internal___description
  childDataYaml___children___internal___fieldOwners
  childDataYaml___children___internal___ignoreType
  childDataYaml___children___internal___mediaType
  childDataYaml___children___internal___owner
  childDataYaml___children___internal___type
  childDataYaml___internal___content
  childDataYaml___internal___contentDigest
  childDataYaml___internal___description
  childDataYaml___internal___fieldOwners
  childDataYaml___internal___ignoreType
  childDataYaml___internal___mediaType
  childDataYaml___internal___owner
  childDataYaml___internal___type
  childDataYaml___bistro_du_centre___name
  childDataYaml___bistro_du_centre___address
  childDataYaml___bistro_du_centre___url
  childDataYaml___bistro_du_centre___facebook
  childDataYaml___bistro_du_centre___description
  childDataYaml___bistro_du_centre___map
  childDataYaml___boston_pizza_jonquiere___name
  childDataYaml___boston_pizza_jonquiere___address
  childDataYaml___boston_pizza_jonquiere___url
  childDataYaml___boston_pizza_jonquiere___facebook
  childDataYaml___boston_pizza_jonquiere___description
  childDataYaml___boston_pizza_jonquiere___map
  childDataYaml___cafeclocheralma___name
  childDataYaml___cafeclocheralma___address
  childDataYaml___cafeclocheralma___url
  childDataYaml___cafeclocheralma___facebook
  childDataYaml___cafeclocheralma___description
  childDataYaml___cafeclocheralma___map
  childDataYaml___conformit___name
  childDataYaml___conformit___address
  childDataYaml___conformit___url
  childDataYaml___conformit___facebook
  childDataYaml___conformit___description
  childDataYaml___conformit___map
  childDataYaml___exode___name
  childDataYaml___exode___address
  childDataYaml___exode___url
  childDataYaml___exode___facebook
  childDataYaml___exode___description
  childDataYaml___exode___map
  childDataYaml___UQAC_Aquarium___name
  childDataYaml___UQAC_Aquarium___address
  childDataYaml___UQAC_Aquarium___url
  childDataYaml___UQAC_Aquarium___facebook
  childDataYaml___UQAC_Aquarium___description
  childDataYaml___UQAC_Aquarium___map
  childDataYaml___moulin_a_cie___name
  childDataYaml___moulin_a_cie___address
  childDataYaml___moulin_a_cie___url
  childDataYaml___moulin_a_cie___facebook
  childDataYaml___moulin_a_cie___twitter
  childDataYaml___moulin_a_cie___description
  childDataYaml___moulin_a_cie___map
  childDataYaml___lion_bleu___name
  childDataYaml___lion_bleu___address
  childDataYaml___lion_bleu___url
  childDataYaml___lion_bleu___facebook
  childDataYaml___lion_bleu___description
  childDataYaml___lion_bleu___map
  childDataYaml___pacini_alma___name
  childDataYaml___pacini_alma___address
  childDataYaml___pacini_alma___url
  childDataYaml___pacini_alma___facebook
  childDataYaml___pacini_alma___description
  childDataYaml___pacini_alma___map
  childDataYaml___mikes_chicoutimi_racine___name
  childDataYaml___mikes_chicoutimi_racine___address
  childDataYaml___mikes_chicoutimi_racine___url
  childDataYaml___mikes_chicoutimi_racine___facebook
  childDataYaml___mikes_chicoutimi_racine___description
  childDataYaml___mikes_chicoutimi_racine___map
  childDataYaml___stas_chicoutimi___name
  childDataYaml___stas_chicoutimi___address
  childDataYaml___stas_chicoutimi___url
  childDataYaml___stas_chicoutimi___facebook
  childDataYaml___stas_chicoutimi___description
  childDataYaml___stas_chicoutimi___map
  childDataYaml___tlm_chicoutimi___name
  childDataYaml___tlm_chicoutimi___address
  childDataYaml___tlm_chicoutimi___url
  childDataYaml___tlm_chicoutimi___facebook
  childDataYaml___tlm_chicoutimi___description
  childDataYaml___tlm_chicoutimi___map
  childrenAuthorsYaml
  childrenAuthorsYaml___id
  childrenAuthorsYaml___parent___id
  childrenAuthorsYaml___parent___parent___id
  childrenAuthorsYaml___parent___parent___children
  childrenAuthorsYaml___parent___children
  childrenAuthorsYaml___parent___children___id
  childrenAuthorsYaml___parent___children___children
  childrenAuthorsYaml___parent___internal___content
  childrenAuthorsYaml___parent___internal___contentDigest
  childrenAuthorsYaml___parent___internal___description
  childrenAuthorsYaml___parent___internal___fieldOwners
  childrenAuthorsYaml___parent___internal___ignoreType
  childrenAuthorsYaml___parent___internal___mediaType
  childrenAuthorsYaml___parent___internal___owner
  childrenAuthorsYaml___parent___internal___type
  childrenAuthorsYaml___children
  childrenAuthorsYaml___children___id
  childrenAuthorsYaml___children___parent___id
  childrenAuthorsYaml___children___parent___children
  childrenAuthorsYaml___children___children
  childrenAuthorsYaml___children___children___id
  childrenAuthorsYaml___children___children___children
  childrenAuthorsYaml___children___internal___content
  childrenAuthorsYaml___children___internal___contentDigest
  childrenAuthorsYaml___children___internal___description
  childrenAuthorsYaml___children___internal___fieldOwners
  childrenAuthorsYaml___children___internal___ignoreType
  childrenAuthorsYaml___children___internal___mediaType
  childrenAuthorsYaml___children___internal___owner
  childrenAuthorsYaml___children___internal___type
  childrenAuthorsYaml___internal___content
  childrenAuthorsYaml___internal___contentDigest
  childrenAuthorsYaml___internal___description
  childrenAuthorsYaml___internal___fieldOwners
  childrenAuthorsYaml___internal___ignoreType
  childrenAuthorsYaml___internal___mediaType
  childrenAuthorsYaml___internal___owner
  childrenAuthorsYaml___internal___type
  childrenAuthorsYaml___name
  childrenAuthorsYaml___twitter
  childrenAuthorsYaml___github
  childrenAuthorsYaml___website
  childrenAuthorsYaml___yamlId
  childrenAuthorsYaml___bio
  childAuthorsYaml___id
  childAuthorsYaml___parent___id
  childAuthorsYaml___parent___parent___id
  childAuthorsYaml___parent___parent___children
  childAuthorsYaml___parent___children
  childAuthorsYaml___parent___children___id
  childAuthorsYaml___parent___children___children
  childAuthorsYaml___parent___internal___content
  childAuthorsYaml___parent___internal___contentDigest
  childAuthorsYaml___parent___internal___description
  childAuthorsYaml___parent___internal___fieldOwners
  childAuthorsYaml___parent___internal___ignoreType
  childAuthorsYaml___parent___internal___mediaType
  childAuthorsYaml___parent___internal___owner
  childAuthorsYaml___parent___internal___type
  childAuthorsYaml___children
  childAuthorsYaml___children___id
  childAuthorsYaml___children___parent___id
  childAuthorsYaml___children___parent___children
  childAuthorsYaml___children___children
  childAuthorsYaml___children___children___id
  childAuthorsYaml___children___children___children
  childAuthorsYaml___children___internal___content
  childAuthorsYaml___children___internal___contentDigest
  childAuthorsYaml___children___internal___description
  childAuthorsYaml___children___internal___fieldOwners
  childAuthorsYaml___children___internal___ignoreType
  childAuthorsYaml___children___internal___mediaType
  childAuthorsYaml___children___internal___owner
  childAuthorsYaml___children___internal___type
  childAuthorsYaml___internal___content
  childAuthorsYaml___internal___contentDigest
  childAuthorsYaml___internal___description
  childAuthorsYaml___internal___fieldOwners
  childAuthorsYaml___internal___ignoreType
  childAuthorsYaml___internal___mediaType
  childAuthorsYaml___internal___owner
  childAuthorsYaml___internal___type
  childAuthorsYaml___name
  childAuthorsYaml___twitter
  childAuthorsYaml___github
  childAuthorsYaml___website
  childAuthorsYaml___yamlId
  childAuthorsYaml___bio
  childrenAdminYaml
  childrenAdminYaml___id
  childrenAdminYaml___parent___id
  childrenAdminYaml___parent___parent___id
  childrenAdminYaml___parent___parent___children
  childrenAdminYaml___parent___children
  childrenAdminYaml___parent___children___id
  childrenAdminYaml___parent___children___children
  childrenAdminYaml___parent___internal___content
  childrenAdminYaml___parent___internal___contentDigest
  childrenAdminYaml___parent___internal___description
  childrenAdminYaml___parent___internal___fieldOwners
  childrenAdminYaml___parent___internal___ignoreType
  childrenAdminYaml___parent___internal___mediaType
  childrenAdminYaml___parent___internal___owner
  childrenAdminYaml___parent___internal___type
  childrenAdminYaml___children
  childrenAdminYaml___children___id
  childrenAdminYaml___children___parent___id
  childrenAdminYaml___children___parent___children
  childrenAdminYaml___children___children
  childrenAdminYaml___children___children___id
  childrenAdminYaml___children___children___children
  childrenAdminYaml___children___internal___content
  childrenAdminYaml___children___internal___contentDigest
  childrenAdminYaml___children___internal___description
  childrenAdminYaml___children___internal___fieldOwners
  childrenAdminYaml___children___internal___ignoreType
  childrenAdminYaml___children___internal___mediaType
  childrenAdminYaml___children___internal___owner
  childrenAdminYaml___children___internal___type
  childrenAdminYaml___internal___content
  childrenAdminYaml___internal___contentDigest
  childrenAdminYaml___internal___description
  childrenAdminYaml___internal___fieldOwners
  childrenAdminYaml___internal___ignoreType
  childrenAdminYaml___internal___mediaType
  childrenAdminYaml___internal___owner
  childrenAdminYaml___internal___type
  childrenAdminYaml___backend___name
  childrenAdminYaml___backend___branch
  childrenAdminYaml___backend___repo
  childrenAdminYaml___backend___squash_merges
  childrenAdminYaml___backend___commit_messages___create
  childrenAdminYaml___backend___commit_messages___update
  childrenAdminYaml___backend___commit_messages___delete
  childrenAdminYaml___backend___commit_messages___uploadMedia
  childrenAdminYaml___backend___commit_messages___deleteMedia
  childrenAdminYaml___backend___commit_messages___openAuthoring
  childrenAdminYaml___local_backend
  childrenAdminYaml___media_folder
  childrenAdminYaml___public_folder
  childrenAdminYaml___logo_url
  childrenAdminYaml___publish_mode
  childrenAdminYaml___open_authoring
  childrenAdminYaml___collections
  childrenAdminYaml___collections___name
  childrenAdminYaml___collections___label
  childrenAdminYaml___collections___label_singular
  childrenAdminYaml___collections___folder
  childrenAdminYaml___collections___create
  childrenAdminYaml___collections___delete
  childrenAdminYaml___collections___extension
  childrenAdminYaml___collections___format
  childrenAdminYaml___collections___slug
  childrenAdminYaml___collections___summary
  childrenAdminYaml___collections___sortable_fields
  childrenAdminYaml___collections___view_groups
  childrenAdminYaml___collections___view_groups___label
  childrenAdminYaml___collections___view_groups___field
  childrenAdminYaml___collections___view_groups___pattern
  childrenAdminYaml___collections___fields
  childrenAdminYaml___collections___fields___label
  childrenAdminYaml___collections___fields___name
  childrenAdminYaml___collections___fields___widget
  childrenAdminYaml___collections___fields___hint
  childrenAdminYaml___collections___fields___required
  childrenAdminYaml___collections___fields___collection
  childrenAdminYaml___collections___fields___searchFields
  childrenAdminYaml___collections___fields___valueField
  childrenAdminYaml___collections___fields___displayFields
  childrenAdminYaml___collections___fields___label_singular
  childrenAdminYaml___collections___fields___fields
  childrenAdminYaml___collections___fields___pattern
  childrenAdminYaml___collections___identifier_field
  childAdminYaml___id
  childAdminYaml___parent___id
  childAdminYaml___parent___parent___id
  childAdminYaml___parent___parent___children
  childAdminYaml___parent___children
  childAdminYaml___parent___children___id
  childAdminYaml___parent___children___children
  childAdminYaml___parent___internal___content
  childAdminYaml___parent___internal___contentDigest
  childAdminYaml___parent___internal___description
  childAdminYaml___parent___internal___fieldOwners
  childAdminYaml___parent___internal___ignoreType
  childAdminYaml___parent___internal___mediaType
  childAdminYaml___parent___internal___owner
  childAdminYaml___parent___internal___type
  childAdminYaml___children
  childAdminYaml___children___id
  childAdminYaml___children___parent___id
  childAdminYaml___children___parent___children
  childAdminYaml___children___children
  childAdminYaml___children___children___id
  childAdminYaml___children___children___children
  childAdminYaml___children___internal___content
  childAdminYaml___children___internal___contentDigest
  childAdminYaml___children___internal___description
  childAdminYaml___children___internal___fieldOwners
  childAdminYaml___children___internal___ignoreType
  childAdminYaml___children___internal___mediaType
  childAdminYaml___children___internal___owner
  childAdminYaml___children___internal___type
  childAdminYaml___internal___content
  childAdminYaml___internal___contentDigest
  childAdminYaml___internal___description
  childAdminYaml___internal___fieldOwners
  childAdminYaml___internal___ignoreType
  childAdminYaml___internal___mediaType
  childAdminYaml___internal___owner
  childAdminYaml___internal___type
  childAdminYaml___backend___name
  childAdminYaml___backend___branch
  childAdminYaml___backend___repo
  childAdminYaml___backend___squash_merges
  childAdminYaml___backend___commit_messages___create
  childAdminYaml___backend___commit_messages___update
  childAdminYaml___backend___commit_messages___delete
  childAdminYaml___backend___commit_messages___uploadMedia
  childAdminYaml___backend___commit_messages___deleteMedia
  childAdminYaml___backend___commit_messages___openAuthoring
  childAdminYaml___local_backend
  childAdminYaml___media_folder
  childAdminYaml___public_folder
  childAdminYaml___logo_url
  childAdminYaml___publish_mode
  childAdminYaml___open_authoring
  childAdminYaml___collections
  childAdminYaml___collections___name
  childAdminYaml___collections___label
  childAdminYaml___collections___label_singular
  childAdminYaml___collections___folder
  childAdminYaml___collections___create
  childAdminYaml___collections___delete
  childAdminYaml___collections___extension
  childAdminYaml___collections___format
  childAdminYaml___collections___slug
  childAdminYaml___collections___summary
  childAdminYaml___collections___sortable_fields
  childAdminYaml___collections___view_groups
  childAdminYaml___collections___view_groups___label
  childAdminYaml___collections___view_groups___field
  childAdminYaml___collections___view_groups___pattern
  childAdminYaml___collections___fields
  childAdminYaml___collections___fields___label
  childAdminYaml___collections___fields___name
  childAdminYaml___collections___fields___widget
  childAdminYaml___collections___fields___hint
  childAdminYaml___collections___fields___required
  childAdminYaml___collections___fields___collection
  childAdminYaml___collections___fields___searchFields
  childAdminYaml___collections___fields___valueField
  childAdminYaml___collections___fields___displayFields
  childAdminYaml___collections___fields___label_singular
  childAdminYaml___collections___fields___fields
  childAdminYaml___collections___fields___pattern
  childAdminYaml___collections___identifier_field
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type FileGroupConnection {
  totalCount: Int!
  edges: [FileEdge!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  distinct(field: FileFieldsEnum!): [String!]!
  max(field: FileFieldsEnum!): Float
  min(field: FileFieldsEnum!): Float
  sum(field: FileFieldsEnum!): Float
  group(skip: Int, limit: Int, field: FileFieldsEnum!): [FileGroupConnection!]!
  field: String!
  fieldValue: String
}

input FileFilterInput {
  sourceInstanceName: StringQueryOperatorInput
  absolutePath: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  size: IntQueryOperatorInput
  prettySize: StringQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  accessTime: DateQueryOperatorInput
  changeTime: DateQueryOperatorInput
  birthTime: DateQueryOperatorInput
  root: StringQueryOperatorInput
  dir: StringQueryOperatorInput
  base: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  name: StringQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  dev: IntQueryOperatorInput
  mode: IntQueryOperatorInput
  nlink: IntQueryOperatorInput
  uid: IntQueryOperatorInput
  gid: IntQueryOperatorInput
  rdev: IntQueryOperatorInput
  ino: FloatQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  atime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  ctime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  publicURL: StringQueryOperatorInput
  childrenImageSharp: ImageSharpFilterListInput
  childImageSharp: ImageSharpFilterInput
  childrenIoEventsYaml: IoEventsYamlFilterListInput
  childIoEventsYaml: IoEventsYamlFilterInput
  childrenLocationsYaml: LocationsYamlFilterListInput
  childLocationsYaml: LocationsYamlFilterInput
  childrenFaqYaml: FaqYamlFilterListInput
  childFaqYaml: FaqYamlFilterInput
  childrenDataYaml: DataYamlFilterListInput
  childDataYaml: DataYamlFilterInput
  childrenAuthorsYaml: AuthorsYamlFilterListInput
  childAuthorsYaml: AuthorsYamlFilterInput
  childrenAdminYaml: AdminYamlFilterListInput
  childAdminYaml: AdminYamlFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input FileSortInput {
  fields: [FileFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

enum SortOrderEnum {
  ASC
  DESC
}

type DirectoryConnection {
  totalCount: Int!
  edges: [DirectoryEdge!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  distinct(field: DirectoryFieldsEnum!): [String!]!
  max(field: DirectoryFieldsEnum!): Float
  min(field: DirectoryFieldsEnum!): Float
  sum(field: DirectoryFieldsEnum!): Float
  group(skip: Int, limit: Int, field: DirectoryFieldsEnum!): [DirectoryGroupConnection!]!
}

type DirectoryEdge {
  next: Directory
  node: Directory!
  previous: Directory
}

enum DirectoryFieldsEnum {
  sourceInstanceName
  absolutePath
  relativePath
  extension
  size
  prettySize
  modifiedTime
  accessTime
  changeTime
  birthTime
  root
  dir
  base
  ext
  name
  relativeDirectory
  dev
  mode
  nlink
  uid
  gid
  rdev
  ino
  atimeMs
  mtimeMs
  ctimeMs
  atime
  mtime
  ctime
  birthtime
  birthtimeMs
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type DirectoryGroupConnection {
  totalCount: Int!
  edges: [DirectoryEdge!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  distinct(field: DirectoryFieldsEnum!): [String!]!
  max(field: DirectoryFieldsEnum!): Float
  min(field: DirectoryFieldsEnum!): Float
  sum(field: DirectoryFieldsEnum!): Float
  group(skip: Int, limit: Int, field: DirectoryFieldsEnum!): [DirectoryGroupConnection!]!
  field: String!
  fieldValue: String
}

input DirectoryFilterInput {
  sourceInstanceName: StringQueryOperatorInput
  absolutePath: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  size: IntQueryOperatorInput
  prettySize: StringQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  accessTime: DateQueryOperatorInput
  changeTime: DateQueryOperatorInput
  birthTime: DateQueryOperatorInput
  root: StringQueryOperatorInput
  dir: StringQueryOperatorInput
  base: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  name: StringQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  dev: IntQueryOperatorInput
  mode: IntQueryOperatorInput
  nlink: IntQueryOperatorInput
  uid: IntQueryOperatorInput
  gid: IntQueryOperatorInput
  rdev: IntQueryOperatorInput
  ino: FloatQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  atime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  ctime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input DirectorySortInput {
  fields: [DirectoryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SiteSiteMetadataFilterInput {
  title: StringQueryOperatorInput
  description: StringQueryOperatorInput
  siteUrl: StringQueryOperatorInput
  rssMetadata: SiteSiteMetadataRssMetadataFilterInput
}

input SiteSiteMetadataRssMetadataFilterInput {
  site_url: StringQueryOperatorInput
  feed_url: StringQueryOperatorInput
  title: StringQueryOperatorInput
  description: StringQueryOperatorInput
  image_url: StringQueryOperatorInput
  copyright: StringQueryOperatorInput
}

type SiteConnection {
  totalCount: Int!
  edges: [SiteEdge!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  distinct(field: SiteFieldsEnum!): [String!]!
  max(field: SiteFieldsEnum!): Float
  min(field: SiteFieldsEnum!): Float
  sum(field: SiteFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteFieldsEnum!): [SiteGroupConnection!]!
}

type SiteEdge {
  next: Site
  node: Site!
  previous: Site
}

enum SiteFieldsEnum {
  buildTime
  siteMetadata___title
  siteMetadata___description
  siteMetadata___siteUrl
  siteMetadata___rssMetadata___site_url
  siteMetadata___rssMetadata___feed_url
  siteMetadata___rssMetadata___title
  siteMetadata___rssMetadata___description
  siteMetadata___rssMetadata___image_url
  siteMetadata___rssMetadata___copyright
  port
  host
  pathPrefix
  polyfill
  jsxRuntime
  trailingSlash
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type SiteGroupConnection {
  totalCount: Int!
  edges: [SiteEdge!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  distinct(field: SiteFieldsEnum!): [String!]!
  max(field: SiteFieldsEnum!): Float
  min(field: SiteFieldsEnum!): Float
  sum(field: SiteFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteFieldsEnum!): [SiteGroupConnection!]!
  field: String!
  fieldValue: String
}

input SiteFilterInput {
  buildTime: DateQueryOperatorInput
  siteMetadata: SiteSiteMetadataFilterInput
  port: IntQueryOperatorInput
  host: StringQueryOperatorInput
  pathPrefix: StringQueryOperatorInput
  polyfill: BooleanQueryOperatorInput
  jsxRuntime: StringQueryOperatorInput
  trailingSlash: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input SiteSortInput {
  fields: [SiteFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SiteFunctionConnection {
  totalCount: Int!
  edges: [SiteFunctionEdge!]!
  nodes: [SiteFunction!]!
  pageInfo: PageInfo!
  distinct(field: SiteFunctionFieldsEnum!): [String!]!
  max(field: SiteFunctionFieldsEnum!): Float
  min(field: SiteFunctionFieldsEnum!): Float
  sum(field: SiteFunctionFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteFunctionFieldsEnum!): [SiteFunctionGroupConnection!]!
}

type SiteFunctionEdge {
  next: SiteFunction
  node: SiteFunction!
  previous: SiteFunction
}

enum SiteFunctionFieldsEnum {
  functionRoute
  pluginName
  originalAbsoluteFilePath
  originalRelativeFilePath
  relativeCompiledFilePath
  absoluteCompiledFilePath
  matchPath
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type SiteFunctionGroupConnection {
  totalCount: Int!
  edges: [SiteFunctionEdge!]!
  nodes: [SiteFunction!]!
  pageInfo: PageInfo!
  distinct(field: SiteFunctionFieldsEnum!): [String!]!
  max(field: SiteFunctionFieldsEnum!): Float
  min(field: SiteFunctionFieldsEnum!): Float
  sum(field: SiteFunctionFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteFunctionFieldsEnum!): [SiteFunctionGroupConnection!]!
  field: String!
  fieldValue: String
}

input SiteFunctionFilterInput {
  functionRoute: StringQueryOperatorInput
  pluginName: StringQueryOperatorInput
  originalAbsoluteFilePath: StringQueryOperatorInput
  originalRelativeFilePath: StringQueryOperatorInput
  relativeCompiledFilePath: StringQueryOperatorInput
  absoluteCompiledFilePath: StringQueryOperatorInput
  matchPath: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input SiteFunctionSortInput {
  fields: [SiteFunctionFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SitePluginFilterInput {
  resolve: StringQueryOperatorInput
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
  nodeAPIs: StringQueryOperatorInput
  browserAPIs: StringQueryOperatorInput
  ssrAPIs: StringQueryOperatorInput
  pluginFilepath: StringQueryOperatorInput
  pluginOptions: JSONQueryOperatorInput
  packageJson: JSONQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

type SitePageConnection {
  totalCount: Int!
  edges: [SitePageEdge!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  distinct(field: SitePageFieldsEnum!): [String!]!
  max(field: SitePageFieldsEnum!): Float
  min(field: SitePageFieldsEnum!): Float
  sum(field: SitePageFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SitePageFieldsEnum!): [SitePageGroupConnection!]!
}

type SitePageEdge {
  next: SitePage
  node: SitePage!
  previous: SitePage
}

enum SitePageFieldsEnum {
  path
  component
  internalComponentName
  componentChunkName
  matchPath
  pageContext
  pluginCreator___resolve
  pluginCreator___name
  pluginCreator___version
  pluginCreator___nodeAPIs
  pluginCreator___browserAPIs
  pluginCreator___ssrAPIs
  pluginCreator___pluginFilepath
  pluginCreator___pluginOptions
  pluginCreator___packageJson
  pluginCreator___id
  pluginCreator___parent___id
  pluginCreator___parent___parent___id
  pluginCreator___parent___parent___children
  pluginCreator___parent___children
  pluginCreator___parent___children___id
  pluginCreator___parent___children___children
  pluginCreator___parent___internal___content
  pluginCreator___parent___internal___contentDigest
  pluginCreator___parent___internal___description
  pluginCreator___parent___internal___fieldOwners
  pluginCreator___parent___internal___ignoreType
  pluginCreator___parent___internal___mediaType
  pluginCreator___parent___internal___owner
  pluginCreator___parent___internal___type
  pluginCreator___children
  pluginCreator___children___id
  pluginCreator___children___parent___id
  pluginCreator___children___parent___children
  pluginCreator___children___children
  pluginCreator___children___children___id
  pluginCreator___children___children___children
  pluginCreator___children___internal___content
  pluginCreator___children___internal___contentDigest
  pluginCreator___children___internal___description
  pluginCreator___children___internal___fieldOwners
  pluginCreator___children___internal___ignoreType
  pluginCreator___children___internal___mediaType
  pluginCreator___children___internal___owner
  pluginCreator___children___internal___type
  pluginCreator___internal___content
  pluginCreator___internal___contentDigest
  pluginCreator___internal___description
  pluginCreator___internal___fieldOwners
  pluginCreator___internal___ignoreType
  pluginCreator___internal___mediaType
  pluginCreator___internal___owner
  pluginCreator___internal___type
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type SitePageGroupConnection {
  totalCount: Int!
  edges: [SitePageEdge!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  distinct(field: SitePageFieldsEnum!): [String!]!
  max(field: SitePageFieldsEnum!): Float
  min(field: SitePageFieldsEnum!): Float
  sum(field: SitePageFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SitePageFieldsEnum!): [SitePageGroupConnection!]!
  field: String!
  fieldValue: String
}

input SitePageFilterInput {
  path: StringQueryOperatorInput
  component: StringQueryOperatorInput
  internalComponentName: StringQueryOperatorInput
  componentChunkName: StringQueryOperatorInput
  matchPath: StringQueryOperatorInput
  pageContext: JSONQueryOperatorInput
  pluginCreator: SitePluginFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input SitePageSortInput {
  fields: [SitePageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SitePluginConnection {
  totalCount: Int!
  edges: [SitePluginEdge!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  distinct(field: SitePluginFieldsEnum!): [String!]!
  max(field: SitePluginFieldsEnum!): Float
  min(field: SitePluginFieldsEnum!): Float
  sum(field: SitePluginFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SitePluginFieldsEnum!): [SitePluginGroupConnection!]!
}

type SitePluginEdge {
  next: SitePlugin
  node: SitePlugin!
  previous: SitePlugin
}

enum SitePluginFieldsEnum {
  resolve
  name
  version
  nodeAPIs
  browserAPIs
  ssrAPIs
  pluginFilepath
  pluginOptions
  packageJson
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type SitePluginGroupConnection {
  totalCount: Int!
  edges: [SitePluginEdge!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  distinct(field: SitePluginFieldsEnum!): [String!]!
  max(field: SitePluginFieldsEnum!): Float
  min(field: SitePluginFieldsEnum!): Float
  sum(field: SitePluginFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SitePluginFieldsEnum!): [SitePluginGroupConnection!]!
  field: String!
  fieldValue: String
}

input SitePluginSortInput {
  fields: [SitePluginFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SiteBuildMetadataConnection {
  totalCount: Int!
  edges: [SiteBuildMetadataEdge!]!
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
  max(field: SiteBuildMetadataFieldsEnum!): Float
  min(field: SiteBuildMetadataFieldsEnum!): Float
  sum(field: SiteBuildMetadataFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteBuildMetadataFieldsEnum!): [SiteBuildMetadataGroupConnection!]!
}

type SiteBuildMetadataEdge {
  next: SiteBuildMetadata
  node: SiteBuildMetadata!
  previous: SiteBuildMetadata
}

enum SiteBuildMetadataFieldsEnum {
  buildTime
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type SiteBuildMetadataGroupConnection {
  totalCount: Int!
  edges: [SiteBuildMetadataEdge!]!
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
  max(field: SiteBuildMetadataFieldsEnum!): Float
  min(field: SiteBuildMetadataFieldsEnum!): Float
  sum(field: SiteBuildMetadataFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteBuildMetadataFieldsEnum!): [SiteBuildMetadataGroupConnection!]!
  field: String!
  fieldValue: String
}

input SiteBuildMetadataFilterInput {
  buildTime: DateQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input SiteBuildMetadataSortInput {
  fields: [SiteBuildMetadataFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input MarkdownHeadingFilterListInput {
  elemMatch: MarkdownHeadingFilterInput
}

input MarkdownHeadingFilterInput {
  id: StringQueryOperatorInput
  value: StringQueryOperatorInput
  depth: IntQueryOperatorInput
}

input MarkdownWordCountFilterInput {
  paragraphs: IntQueryOperatorInput
  sentences: IntQueryOperatorInput
  words: IntQueryOperatorInput
}

type MarkdownRemarkConnection {
  totalCount: Int!
  edges: [MarkdownRemarkEdge!]!
  nodes: [MarkdownRemark!]!
  pageInfo: PageInfo!
  distinct(field: MarkdownRemarkFieldsEnum!): [String!]!
  max(field: MarkdownRemarkFieldsEnum!): Float
  min(field: MarkdownRemarkFieldsEnum!): Float
  sum(field: MarkdownRemarkFieldsEnum!): Float
  group(skip: Int, limit: Int, field: MarkdownRemarkFieldsEnum!): [MarkdownRemarkGroupConnection!]!
}

type MarkdownRemarkEdge {
  next: MarkdownRemark
  node: MarkdownRemark!
  previous: MarkdownRemark
}

enum MarkdownRemarkFieldsEnum {
  id
  html
  htmlAst
  excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  timeToRead
  tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  wordCount___paragraphs
  wordCount___sentences
  wordCount___words
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type MarkdownRemarkGroupConnection {
  totalCount: Int!
  edges: [MarkdownRemarkEdge!]!
  nodes: [MarkdownRemark!]!
  pageInfo: PageInfo!
  distinct(field: MarkdownRemarkFieldsEnum!): [String!]!
  max(field: MarkdownRemarkFieldsEnum!): Float
  min(field: MarkdownRemarkFieldsEnum!): Float
  sum(field: MarkdownRemarkFieldsEnum!): Float
  group(skip: Int, limit: Int, field: MarkdownRemarkFieldsEnum!): [MarkdownRemarkGroupConnection!]!
  field: String!
  fieldValue: String
}

input MarkdownRemarkFilterInput {
  id: StringQueryOperatorInput
  html: StringQueryOperatorInput
  htmlAst: JSONQueryOperatorInput
  excerpt: StringQueryOperatorInput
  excerptAst: JSONQueryOperatorInput
  headings: MarkdownHeadingFilterListInput
  timeToRead: IntQueryOperatorInput
  tableOfContents: StringQueryOperatorInput
  wordCount: MarkdownWordCountFilterInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input MarkdownRemarkSortInput {
  fields: [MarkdownRemarkFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type ImageSharpConnection {
  totalCount: Int!
  edges: [ImageSharpEdge!]!
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  max(field: ImageSharpFieldsEnum!): Float
  min(field: ImageSharpFieldsEnum!): Float
  sum(field: ImageSharpFieldsEnum!): Float
  group(skip: Int, limit: Int, field: ImageSharpFieldsEnum!): [ImageSharpGroupConnection!]!
}

type ImageSharpEdge {
  next: ImageSharp
  node: ImageSharp!
  previous: ImageSharp
}

enum ImageSharpFieldsEnum {
  fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  original___width
  original___height
  original___src
  resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type ImageSharpGroupConnection {
  totalCount: Int!
  edges: [ImageSharpEdge!]!
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  max(field: ImageSharpFieldsEnum!): Float
  min(field: ImageSharpFieldsEnum!): Float
  sum(field: ImageSharpFieldsEnum!): Float
  group(skip: Int, limit: Int, field: ImageSharpFieldsEnum!): [ImageSharpGroupConnection!]!
  field: String!
  fieldValue: String
}

input ImageSharpSortInput {
  fields: [ImageSharpFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type IoEventsYamlConnection {
  totalCount: Int!
  edges: [IoEventsYamlEdge!]!
  nodes: [IoEventsYaml!]!
  pageInfo: PageInfo!
  distinct(field: IoEventsYamlFieldsEnum!): [String!]!
  max(field: IoEventsYamlFieldsEnum!): Float
  min(field: IoEventsYamlFieldsEnum!): Float
  sum(field: IoEventsYamlFieldsEnum!): Float
  group(skip: Int, limit: Int, field: IoEventsYamlFieldsEnum!): [IoEventsYamlGroupConnection!]!
}

type IoEventsYamlEdge {
  next: IoEventsYaml
  node: IoEventsYaml!
  previous: IoEventsYaml
}

enum IoEventsYamlFieldsEnum {
  location___id
  location___parent___id
  location___parent___parent___id
  location___parent___parent___children
  location___parent___children
  location___parent___children___id
  location___parent___children___children
  location___parent___internal___content
  location___parent___internal___contentDigest
  location___parent___internal___description
  location___parent___internal___fieldOwners
  location___parent___internal___ignoreType
  location___parent___internal___mediaType
  location___parent___internal___owner
  location___parent___internal___type
  location___children
  location___children___id
  location___children___parent___id
  location___children___parent___children
  location___children___children
  location___children___children___id
  location___children___children___children
  location___children___internal___content
  location___children___internal___contentDigest
  location___children___internal___description
  location___children___internal___fieldOwners
  location___children___internal___ignoreType
  location___children___internal___mediaType
  location___children___internal___owner
  location___children___internal___type
  location___internal___content
  location___internal___contentDigest
  location___internal___description
  location___internal___fieldOwners
  location___internal___ignoreType
  location___internal___mediaType
  location___internal___owner
  location___internal___type
  location___name
  location___address
  location___url
  location___facebook
  location___description
  location___map
  location___yamlId
  location___twitter
  title
  description
  date
  event_url
  talks
  talks___authors
  talks___authors___id
  talks___authors___parent___id
  talks___authors___parent___children
  talks___authors___children
  talks___authors___children___id
  talks___authors___children___children
  talks___authors___internal___content
  talks___authors___internal___contentDigest
  talks___authors___internal___description
  talks___authors___internal___fieldOwners
  talks___authors___internal___ignoreType
  talks___authors___internal___mediaType
  talks___authors___internal___owner
  talks___authors___internal___type
  talks___authors___name
  talks___authors___twitter
  talks___authors___github
  talks___authors___website
  talks___authors___yamlId
  talks___authors___bio
  talks___title
  talks___description
  talks___id
  talks___parent___id
  talks___parent___parent___id
  talks___parent___parent___children
  talks___parent___children
  talks___parent___children___id
  talks___parent___children___children
  talks___parent___internal___content
  talks___parent___internal___contentDigest
  talks___parent___internal___description
  talks___parent___internal___fieldOwners
  talks___parent___internal___ignoreType
  talks___parent___internal___mediaType
  talks___parent___internal___owner
  talks___parent___internal___type
  talks___children
  talks___children___id
  talks___children___parent___id
  talks___children___parent___children
  talks___children___children
  talks___children___children___id
  talks___children___children___children
  talks___children___internal___content
  talks___children___internal___contentDigest
  talks___children___internal___description
  talks___children___internal___fieldOwners
  talks___children___internal___ignoreType
  talks___children___internal___mediaType
  talks___children___internal___owner
  talks___children___internal___type
  talks___internal___content
  talks___internal___contentDigest
  talks___internal___description
  talks___internal___fieldOwners
  talks___internal___ignoreType
  talks___internal___mediaType
  talks___internal___owner
  talks___internal___type
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type IoEventsYamlGroupConnection {
  totalCount: Int!
  edges: [IoEventsYamlEdge!]!
  nodes: [IoEventsYaml!]!
  pageInfo: PageInfo!
  distinct(field: IoEventsYamlFieldsEnum!): [String!]!
  max(field: IoEventsYamlFieldsEnum!): Float
  min(field: IoEventsYamlFieldsEnum!): Float
  sum(field: IoEventsYamlFieldsEnum!): Float
  group(skip: Int, limit: Int, field: IoEventsYamlFieldsEnum!): [IoEventsYamlGroupConnection!]!
  field: String!
  fieldValue: String
}

input IoEventsYamlSortInput {
  fields: [IoEventsYamlFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type IoEventsYamlTalksConnection {
  totalCount: Int!
  edges: [IoEventsYamlTalksEdge!]!
  nodes: [IoEventsYamlTalks!]!
  pageInfo: PageInfo!
  distinct(field: IoEventsYamlTalksFieldsEnum!): [String!]!
  max(field: IoEventsYamlTalksFieldsEnum!): Float
  min(field: IoEventsYamlTalksFieldsEnum!): Float
  sum(field: IoEventsYamlTalksFieldsEnum!): Float
  group(skip: Int, limit: Int, field: IoEventsYamlTalksFieldsEnum!): [IoEventsYamlTalksGroupConnection!]!
}

type IoEventsYamlTalksEdge {
  next: IoEventsYamlTalks
  node: IoEventsYamlTalks!
  previous: IoEventsYamlTalks
}

enum IoEventsYamlTalksFieldsEnum {
  authors
  authors___id
  authors___parent___id
  authors___parent___parent___id
  authors___parent___parent___children
  authors___parent___children
  authors___parent___children___id
  authors___parent___children___children
  authors___parent___internal___content
  authors___parent___internal___contentDigest
  authors___parent___internal___description
  authors___parent___internal___fieldOwners
  authors___parent___internal___ignoreType
  authors___parent___internal___mediaType
  authors___parent___internal___owner
  authors___parent___internal___type
  authors___children
  authors___children___id
  authors___children___parent___id
  authors___children___parent___children
  authors___children___children
  authors___children___children___id
  authors___children___children___children
  authors___children___internal___content
  authors___children___internal___contentDigest
  authors___children___internal___description
  authors___children___internal___fieldOwners
  authors___children___internal___ignoreType
  authors___children___internal___mediaType
  authors___children___internal___owner
  authors___children___internal___type
  authors___internal___content
  authors___internal___contentDigest
  authors___internal___description
  authors___internal___fieldOwners
  authors___internal___ignoreType
  authors___internal___mediaType
  authors___internal___owner
  authors___internal___type
  authors___name
  authors___twitter
  authors___github
  authors___website
  authors___yamlId
  authors___bio
  title
  description
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type IoEventsYamlTalksGroupConnection {
  totalCount: Int!
  edges: [IoEventsYamlTalksEdge!]!
  nodes: [IoEventsYamlTalks!]!
  pageInfo: PageInfo!
  distinct(field: IoEventsYamlTalksFieldsEnum!): [String!]!
  max(field: IoEventsYamlTalksFieldsEnum!): Float
  min(field: IoEventsYamlTalksFieldsEnum!): Float
  sum(field: IoEventsYamlTalksFieldsEnum!): Float
  group(skip: Int, limit: Int, field: IoEventsYamlTalksFieldsEnum!): [IoEventsYamlTalksGroupConnection!]!
  field: String!
  fieldValue: String
}

input IoEventsYamlTalksSortInput {
  fields: [IoEventsYamlTalksFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type LocationsYamlConnection {
  totalCount: Int!
  edges: [LocationsYamlEdge!]!
  nodes: [LocationsYaml!]!
  pageInfo: PageInfo!
  distinct(field: LocationsYamlFieldsEnum!): [String!]!
  max(field: LocationsYamlFieldsEnum!): Float
  min(field: LocationsYamlFieldsEnum!): Float
  sum(field: LocationsYamlFieldsEnum!): Float
  group(skip: Int, limit: Int, field: LocationsYamlFieldsEnum!): [LocationsYamlGroupConnection!]!
}

type LocationsYamlEdge {
  next: LocationsYaml
  node: LocationsYaml!
  previous: LocationsYaml
}

enum LocationsYamlFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  name
  address
  url
  facebook
  description
  map
  yamlId
  twitter
}

type LocationsYamlGroupConnection {
  totalCount: Int!
  edges: [LocationsYamlEdge!]!
  nodes: [LocationsYaml!]!
  pageInfo: PageInfo!
  distinct(field: LocationsYamlFieldsEnum!): [String!]!
  max(field: LocationsYamlFieldsEnum!): Float
  min(field: LocationsYamlFieldsEnum!): Float
  sum(field: LocationsYamlFieldsEnum!): Float
  group(skip: Int, limit: Int, field: LocationsYamlFieldsEnum!): [LocationsYamlGroupConnection!]!
  field: String!
  fieldValue: String
}

input LocationsYamlSortInput {
  fields: [LocationsYamlFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type FaqYamlConnection {
  totalCount: Int!
  edges: [FaqYamlEdge!]!
  nodes: [FaqYaml!]!
  pageInfo: PageInfo!
  distinct(field: FaqYamlFieldsEnum!): [String!]!
  max(field: FaqYamlFieldsEnum!): Float
  min(field: FaqYamlFieldsEnum!): Float
  sum(field: FaqYamlFieldsEnum!): Float
  group(skip: Int, limit: Int, field: FaqYamlFieldsEnum!): [FaqYamlGroupConnection!]!
}

type FaqYamlEdge {
  next: FaqYaml
  node: FaqYaml!
  previous: FaqYaml
}

enum FaqYamlFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  header
  questions
  questions___slug
  questions___question
  questions___answer
}

type FaqYamlGroupConnection {
  totalCount: Int!
  edges: [FaqYamlEdge!]!
  nodes: [FaqYaml!]!
  pageInfo: PageInfo!
  distinct(field: FaqYamlFieldsEnum!): [String!]!
  max(field: FaqYamlFieldsEnum!): Float
  min(field: FaqYamlFieldsEnum!): Float
  sum(field: FaqYamlFieldsEnum!): Float
  group(skip: Int, limit: Int, field: FaqYamlFieldsEnum!): [FaqYamlGroupConnection!]!
  field: String!
  fieldValue: String
}

input FaqYamlSortInput {
  fields: [FaqYamlFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type DataYamlConnection {
  totalCount: Int!
  edges: [DataYamlEdge!]!
  nodes: [DataYaml!]!
  pageInfo: PageInfo!
  distinct(field: DataYamlFieldsEnum!): [String!]!
  max(field: DataYamlFieldsEnum!): Float
  min(field: DataYamlFieldsEnum!): Float
  sum(field: DataYamlFieldsEnum!): Float
  group(skip: Int, limit: Int, field: DataYamlFieldsEnum!): [DataYamlGroupConnection!]!
}

type DataYamlEdge {
  next: DataYaml
  node: DataYaml!
  previous: DataYaml
}

enum DataYamlFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  bistro_du_centre___name
  bistro_du_centre___address
  bistro_du_centre___url
  bistro_du_centre___facebook
  bistro_du_centre___description
  bistro_du_centre___map
  boston_pizza_jonquiere___name
  boston_pizza_jonquiere___address
  boston_pizza_jonquiere___url
  boston_pizza_jonquiere___facebook
  boston_pizza_jonquiere___description
  boston_pizza_jonquiere___map
  cafeclocheralma___name
  cafeclocheralma___address
  cafeclocheralma___url
  cafeclocheralma___facebook
  cafeclocheralma___description
  cafeclocheralma___map
  conformit___name
  conformit___address
  conformit___url
  conformit___facebook
  conformit___description
  conformit___map
  exode___name
  exode___address
  exode___url
  exode___facebook
  exode___description
  exode___map
  UQAC_Aquarium___name
  UQAC_Aquarium___address
  UQAC_Aquarium___url
  UQAC_Aquarium___facebook
  UQAC_Aquarium___description
  UQAC_Aquarium___map
  moulin_a_cie___name
  moulin_a_cie___address
  moulin_a_cie___url
  moulin_a_cie___facebook
  moulin_a_cie___twitter
  moulin_a_cie___description
  moulin_a_cie___map
  lion_bleu___name
  lion_bleu___address
  lion_bleu___url
  lion_bleu___facebook
  lion_bleu___description
  lion_bleu___map
  pacini_alma___name
  pacini_alma___address
  pacini_alma___url
  pacini_alma___facebook
  pacini_alma___description
  pacini_alma___map
  mikes_chicoutimi_racine___name
  mikes_chicoutimi_racine___address
  mikes_chicoutimi_racine___url
  mikes_chicoutimi_racine___facebook
  mikes_chicoutimi_racine___description
  mikes_chicoutimi_racine___map
  stas_chicoutimi___name
  stas_chicoutimi___address
  stas_chicoutimi___url
  stas_chicoutimi___facebook
  stas_chicoutimi___description
  stas_chicoutimi___map
  tlm_chicoutimi___name
  tlm_chicoutimi___address
  tlm_chicoutimi___url
  tlm_chicoutimi___facebook
  tlm_chicoutimi___description
  tlm_chicoutimi___map
}

type DataYamlGroupConnection {
  totalCount: Int!
  edges: [DataYamlEdge!]!
  nodes: [DataYaml!]!
  pageInfo: PageInfo!
  distinct(field: DataYamlFieldsEnum!): [String!]!
  max(field: DataYamlFieldsEnum!): Float
  min(field: DataYamlFieldsEnum!): Float
  sum(field: DataYamlFieldsEnum!): Float
  group(skip: Int, limit: Int, field: DataYamlFieldsEnum!): [DataYamlGroupConnection!]!
  field: String!
  fieldValue: String
}

input DataYamlSortInput {
  fields: [DataYamlFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type AuthorsYamlConnection {
  totalCount: Int!
  edges: [AuthorsYamlEdge!]!
  nodes: [AuthorsYaml!]!
  pageInfo: PageInfo!
  distinct(field: AuthorsYamlFieldsEnum!): [String!]!
  max(field: AuthorsYamlFieldsEnum!): Float
  min(field: AuthorsYamlFieldsEnum!): Float
  sum(field: AuthorsYamlFieldsEnum!): Float
  group(skip: Int, limit: Int, field: AuthorsYamlFieldsEnum!): [AuthorsYamlGroupConnection!]!
}

type AuthorsYamlEdge {
  next: AuthorsYaml
  node: AuthorsYaml!
  previous: AuthorsYaml
}

enum AuthorsYamlFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  name
  twitter
  github
  website
  yamlId
  bio
}

type AuthorsYamlGroupConnection {
  totalCount: Int!
  edges: [AuthorsYamlEdge!]!
  nodes: [AuthorsYaml!]!
  pageInfo: PageInfo!
  distinct(field: AuthorsYamlFieldsEnum!): [String!]!
  max(field: AuthorsYamlFieldsEnum!): Float
  min(field: AuthorsYamlFieldsEnum!): Float
  sum(field: AuthorsYamlFieldsEnum!): Float
  group(skip: Int, limit: Int, field: AuthorsYamlFieldsEnum!): [AuthorsYamlGroupConnection!]!
  field: String!
  fieldValue: String
}

input AuthorsYamlSortInput {
  fields: [AuthorsYamlFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type AdminYamlConnection {
  totalCount: Int!
  edges: [AdminYamlEdge!]!
  nodes: [AdminYaml!]!
  pageInfo: PageInfo!
  distinct(field: AdminYamlFieldsEnum!): [String!]!
  max(field: AdminYamlFieldsEnum!): Float
  min(field: AdminYamlFieldsEnum!): Float
  sum(field: AdminYamlFieldsEnum!): Float
  group(skip: Int, limit: Int, field: AdminYamlFieldsEnum!): [AdminYamlGroupConnection!]!
}

type AdminYamlEdge {
  next: AdminYaml
  node: AdminYaml!
  previous: AdminYaml
}

enum AdminYamlFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  backend___name
  backend___branch
  backend___repo
  backend___squash_merges
  backend___commit_messages___create
  backend___commit_messages___update
  backend___commit_messages___delete
  backend___commit_messages___uploadMedia
  backend___commit_messages___deleteMedia
  backend___commit_messages___openAuthoring
  local_backend
  media_folder
  public_folder
  logo_url
  publish_mode
  open_authoring
  collections
  collections___name
  collections___label
  collections___label_singular
  collections___folder
  collections___create
  collections___delete
  collections___extension
  collections___format
  collections___slug
  collections___summary
  collections___sortable_fields
  collections___view_groups
  collections___view_groups___label
  collections___view_groups___field
  collections___view_groups___pattern
  collections___fields
  collections___fields___label
  collections___fields___name
  collections___fields___widget
  collections___fields___hint
  collections___fields___required
  collections___fields___collection
  collections___fields___searchFields
  collections___fields___valueField
  collections___fields___displayFields
  collections___fields___label_singular
  collections___fields___fields
  collections___fields___fields___label
  collections___fields___fields___name
  collections___fields___fields___widget
  collections___fields___fields___required
  collections___fields___fields___label_singular
  collections___fields___fields___collection
  collections___fields___fields___searchFields
  collections___fields___fields___valueField
  collections___fields___fields___displayFields
  collections___fields___fields___multiple
  collections___fields___fields___min
  collections___fields___pattern
  collections___identifier_field
}

type AdminYamlGroupConnection {
  totalCount: Int!
  edges: [AdminYamlEdge!]!
  nodes: [AdminYaml!]!
  pageInfo: PageInfo!
  distinct(field: AdminYamlFieldsEnum!): [String!]!
  max(field: AdminYamlFieldsEnum!): Float
  min(field: AdminYamlFieldsEnum!): Float
  sum(field: AdminYamlFieldsEnum!): Float
  group(skip: Int, limit: Int, field: AdminYamlFieldsEnum!): [AdminYamlGroupConnection!]!
  field: String!
  fieldValue: String
}

input AdminYamlSortInput {
  fields: [AdminYamlFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}
